<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Chrome插件推荐</title>
      <link href="/ck67sglvs0001porx088r2ns4/"/>
      <url>/ck67sglvs0001porx088r2ns4/</url>
      
        <content type="html"><![CDATA[<p><strong>这里推荐一些好用的谷歌浏览器(Chrome)插件</strong></p><h2 id="AdBlock-—-最佳广告拦截工具"><a href="#AdBlock-—-最佳广告拦截工具" class="headerlink" title="AdBlock — 最佳广告拦截工具"></a>AdBlock — 最佳广告拦截工具</h2><p><strong>在YouTube、Facebook、Twitch和其他你喜爱的网站上拦截广告和弹窗。</strong></p><p>AdBlock 是最好的广告拦截工具，拥有超过 6000 万用户，也是最受欢迎的 Chrome 扩展程序之一，下载量超过 3.5 亿次！</p><p><em>功能特色：</em></p><ul><li>☆ 拦截 YouTube、Facebook、Twitch 和所有您喜爱的网站上的弹出窗口、广告和恼人的横幅广告（就连视频广告也可以移除！）</li><li>☆ 拦截第三方跟踪代码并保护您的隐私</li><li>☆ 拦截带有恶意软件、诈骗内容和加密货币挖矿代码的恶意广告，让您安全浏览</li><li>☆ 缩短页面加载时间，享受更快的网络</li><li>☆ 通过滤镜、白名单、深色模式和其他丰富多彩的主题自定义您的体验</li><li>☆ AdBlock 团队提供快速、友好的支持，以及强大的帮助中心，使您能够独立排除故障</li></ul><p><a href="https://chrome.google.com/webstore/detail/adblock-%E2%80%94-best-ad-blocker/gighmmpiobklfepjocnamgkkbiglidom" target="_blank" rel="noopener">安装链接</a></p><h2 id="Tampermonkey"><a href="#Tampermonkey" class="headerlink" title="Tampermonkey"></a>Tampermonkey</h2><p><strong>Tampermonkey 是一款免费的浏览器扩展和最为流行的用户脚本管理器，它适用于 Chrome, Microsoft Edge, Safari, Opera Next, 和 Firefox。</strong></p><p><a href="https://chrome.google.com/webstore/detail/tampermonkey/dhdgffkkebhmkfjojejmpbldmpobfkfo" target="_blank" rel="noopener">安装链接</a></p><h2 id="扩展管理器（Extension-Manager）"><a href="#扩展管理器（Extension-Manager）" class="headerlink" title="扩展管理器（Extension Manager）"></a>扩展管理器（Extension Manager）</h2><p><strong>一键管理所有扩展，快速开启/禁用、批量闪电管理，智能排序，右键卸载、锁定、选项配置，角标提醒，大小布局随心配。快捷、简单、安全。</strong></p><p><em>特征：</em></p><ul><li>一键开启/禁用扩展</li><li>闪电分组：根据场景快速开启/禁用扩展组（被锁定或主题类扩展除外）</li><li>智能排序：可根据您的使用频率智能排序（默认根据名称排序）</li><li>右键菜单：提供锁定、卸载、选项配置、主页、APP运行等快捷功能</li><li>智能搜索：通过关键字或词组快速找到需要的扩展</li><li>角标提醒：实时显示扩展状态，用完后提醒重置，减少资源占用（被锁定或主题类扩展除外）</li><li>视图选择：提供列表视图和网格视图，符合用户习惯</li></ul><p><a href="https://chrome.google.com/webstore/detail/extension-manager/gjldcdngmdknpinoemndlidpcabkggco" target="_blank" rel="noopener">安装链接</a></p><h2 id="Stylus"><a href="#Stylus" class="headerlink" title="Stylus"></a>Stylus</h2><p><strong>Stylus 是一个调整网页外观的用户样式管理器。它可让您轻松地为许多热门网站网站安装主题和皮肤。</strong></p><p><a href="https://chrome.google.com/webstore/detail/stylus/clngdbkpkpeebahjckkjfobafhncgmne" target="_blank" rel="noopener">安装链接</a></p><h2 id="Checker-Plus-for-Gmail™"><a href="#Checker-Plus-for-Gmail™" class="headerlink" title="Checker Plus for Gmail™"></a>Checker Plus for Gmail™</h2><p><strong>无需打开 Gmail 或 Inbox，即可收到桌面邮件通知，方便地查看、收听或删除邮件，并且支持多账户。</strong></p><p><em>和同类扩展程序相比，优势在于:</em></p><ul><li>更多特性和选项！</li><li>更优秀的客户支持服务！我会根据你们的建议增加新特性。</li><li>更实时的更新！可参见下方的版本更新记录。</li><li>最快捷、简便的方式来管理多个电子邮件帐户</li><li>更安全 - 权限要求更少，相比其他扩展。</li><li>高评分 - 谷歌应用商店中评分最高的扩展程序之一！太赞了，感谢评分的各位用户！</li></ul><p><em>特性：</em></p><ul><li>[新增]采用Gmail聊天提醒中的联系人呈现方式，让您可以选择显示他们的照片或者为他们添加自定义头像</li><li>[新增]语音提醒:当收到新邮件而您正收看电影或者忙于烹制晚餐时，您可以选择让电脑大声朗读邮件，可以包括发件人、邮件标题、甚至邮件正文。例如:”Jason发来邮件”，或者”Jason说，到我家来吃饭吧”。这项功能也有益于那些视力障碍者。</li><li>[新增]扩展程序可以根据您的设置监测:所有新邮件、收件箱中的新邮件、或者有特定标签的新邮件</li><li>[新增]您可以让扩展程序即使在Chrome关闭时依旧在后台运行</li><li>[新增]在弹出窗口中对邮件进行缩放以显示大尺寸图片</li><li>您无需打开Gmail网页，可直接在弹出窗口中阅读、存档、标记已读或删除邮件（此选项也可关闭，程序将直接引导您前往Gmail网页进行相关操作）</li><li>当收到新邮件时，获得桌面音效或语音通知。（您甚至可以录制自己的语音通知）</li><li>支持Gmail和Google企业应用服务帐户的多重登录功能</li><li>您可以选择使用Gmail打开所有mailto链接，取代常用的邮件客户端。</li><li>扩展图标有10多种式样供您选择！</li><li>您可以为扩展程序添加新的语音引擎来朗读邮件</li><li>最重要的是，您拥有了最快的方式来”清除”收件箱中的未读邮件！</li></ul><p><a href="https://chrome.google.com/webstore/detail/checker-plus-for-gmail/oeopbcgkkoapgobdbedcemjljbihmemj" target="_blank" rel="noopener">安装链接</a></p><h2 id="EditThisCookie"><a href="#EditThisCookie" class="headerlink" title="EditThisCookie"></a>EditThisCookie</h2><p><strong>EditThisCookie是一个cookie管理器。您可以添加，删除，编辑，搜索，锁定和屏蔽cookies！</strong></p><p><em>特性：</em></p><ul><li>★ 编辑cookies</li><li>★ 删除cookies</li><li>★ 添加一个新的cookie</li><li>★ 创建cookies</li><li>★ 搜索cookies</li><li>★ 保护cookies (只读cookies)</li><li>★ 拦截cookies (cookie 过滤器)</li><li>★ 导出cookies为JSON, Netscape cookie 文档 (非常适合wget及curl), Perl::LPW</li><li>★ 导入JSON格式cookies</li><li>★ 限制任何cookie的最大有效期</li><li>★ 改进性能，移除旧的cookies</li><li>★ 导入cookies.txt</li></ul><p><a href="https://chrome.google.com/webstore/detail/editthiscookie/fngmhnnpilhplaeedifhccceomclgfbg" target="_blank" rel="noopener">安装链接</a></p><h2 id="Enhanced-GitHub"><a href="#Enhanced-GitHub" class="headerlink" title="Enhanced GitHub"></a>Enhanced GitHub</h2><p><strong>显示仓库大小，每个文件的大小，下载链接和复制文件内容的选项</strong></p><p><em>特征：</em></p><ul><li>显示仓库大小</li><li>显示每个活动分支中的每个文件大小（不适用于文件夹/符号链接）</li><li>显示每个文件的下载链接（不适用于文件夹/符号链接）</li><li>将文件内容直接复制到剪贴板（对于markdown文件不起作用）</li><li>在查看文件内容的同时下载文件</li></ul><p><a href="https://chrome.google.com/webstore/detail/enhanced-github/anlikcnbgdeidpacdbdljnabclhahhmd" target="_blank" rel="noopener">安装链接</a></p><h2 id="FeHelper-JSON"><a href="#FeHelper-JSON" class="headerlink" title="FeHelper.JSON"></a>FeHelper.JSON</h2><p><strong>JSON自动格式化、手动格式化，支持排序、解码、下载等，更多功能可在配置页动态安装！</strong></p><p><a href="https://chrome.google.com/webstore/detail/fehelperjson/pkgccpejnmalmdinmhkkfafefagiiiad" target="_blank" rel="noopener">安装链接</a></p><h2 id="Git-History-Browser-Extension"><a href="#Git-History-Browser-Extension" class="headerlink" title="Git History Browser Extension"></a>Git History Browser Extension</h2><p><strong>向github添加按钮以查看文件历史记录</strong></p><p><a href="https://chrome.google.com/webstore/detail/git-history-browser-exten/laghnmifffncfonaoffcndocllegejnf" target="_blank" rel="noopener">安装链接</a></p><h2 id="HitUP-Find-Top-Things"><a href="#HitUP-Find-Top-Things" class="headerlink" title="HitUP - Find Top Things"></a>HitUP - Find Top Things</h2><p><strong>在新标签页中显示重要内容，例如GitHub仓库趋势等</strong></p><p><a href="https://chrome.google.com/webstore/detail/hitup-find-top-things/eiokaohkigpbonodjcbjpecbnccijkjb" target="_blank" rel="noopener">安装链接</a></p><h2 id="Octotree"><a href="#Octotree" class="headerlink" title="Octotree"></a>Octotree</h2><p><em>特征：</em></p><ul><li>易于浏览的代码树，就像在IDE中一样</li><li>使用pjax快速浏览文件</li><li>显示拉取请求更改</li><li>支持私有仓库</li></ul><p><em>专业功能（要求登录帐户和/或在<a href="https://www.octotree.io/上订阅）" target="_blank" rel="noopener">https://www.octotree.io/上订阅）</a>:</em></p><ul><li>增强的代码审查功能</li><li>多种语法主题支持</li><li>查看整个拉取请求已更改的文件</li><li>拉取请求，仓库，发布和文件书签</li><li>仓库缓存（提高大型仓库的性能）</li></ul><p><a href="https://chrome.google.com/webstore/detail/octotree/bkhaagjahfmjljalopjnoealnfndnagc" target="_blank" rel="noopener">安装链接</a></p><h2 id="RSSHub-Radar"><a href="#RSSHub-Radar" class="headerlink" title="RSSHub Radar"></a>RSSHub Radar</h2><p><strong>RSSHub Radar 是 RSSHub 的衍生项目，她可以帮助你快速发现和订阅当前网站的 RSS 和 RSSHub</strong></p><p><a href="https://chrome.google.com/webstore/detail/rsshub-radar/kefjpfngnndepjbopdmoebkipbgkggaa" target="_blank" rel="noopener">安装链接</a></p><h2 id="Standardized-Screenshot"><a href="#Standardized-Screenshot" class="headerlink" title="Standardized Screenshot"></a>Standardized Screenshot</h2><p><strong>标准化的屏幕截图</strong></p><p><a href="https://chrome.google.com/webstore/detail/standardized-screenshot/pabdhaakclnechgfhmnhkcbmjobeoope" target="_blank" rel="noopener">安装链接</a></p><h2 id="新浪微博图床"><a href="#新浪微博图床" class="headerlink" title="新浪微博图床"></a>新浪微博图床</h2><p><strong>简单好用的新浪微博图床,支持选择/拖拽/粘贴上传图片,并生成图片地址,HTML,UBB和Markdown等格式,支持浏览和删除历史记录</strong></p><p><em>特征：</em></p><ul><li>支持点选/拖拽/本地粘贴3种方式上传图片至新浪微博图床</li><li>支持批量上传</li><li>支持生成图片地址,HTML,UBB和Markdown四种格式</li><li>支持本地保存和删除上传历史</li><li>支持在常用在线markdown编辑器中使用ctrl+v粘贴图片，图片自动上传到微博图床。(目前已支持github，csdn及zybuluo的markdown在线编辑器)</li><li>支持https模式</li><li>支持自定义Chrome菜单栏图标</li></ul><p><a href="https://chrome.google.com/webstore/detail/%E6%96%B0%E6%B5%AA%E5%BE%AE%E5%8D%9A%E5%9B%BE%E5%BA%8A/fdfdnfpdplfbbnemmmoklbfjbhecpnhf" target="_blank" rel="noopener">安装链接</a></p><h2 id="Aria2-for-Chrome"><a href="#Aria2-for-Chrome" class="headerlink" title="Aria2 for Chrome"></a>Aria2 for Chrome</h2><p><strong>Aria2 Web UI 支持手动添加和自动拦截下载任务到Aria2。（分叉自YAAW）</strong></p><p><a href="https://chrome.google.com/webstore/detail/aria2-for-chrome/mpkodccbngfoacfalldjimigbofkhgjn" target="_blank" rel="noopener">安装链接</a></p><h2 id="AutoJoin-for-SteamGifts"><a href="#AutoJoin-for-SteamGifts" class="headerlink" title="AutoJoin for SteamGifts"></a>AutoJoin for SteamGifts</h2><p><strong>Steamgifts.com自动加入抽奖和网站增强工具</strong></p><p><em>功能特色：</em></p><ul><li>自动加入抽奖</li><li>无限滚动</li><li>在首页添加加入和退出抽奖按钮</li><li>改善隐藏抽奖</li><li>隐藏所有DLC抽奖</li><li>夜间主题</li></ul><p><a href="https://chrome.google.com/webstore/detail/autojoin-for-steamgifts/bchhlccjhoedhhegglilngpbnldfcidc" target="_blank" rel="noopener">安装链接</a></p><h2 id="Steam-Database"><a href="#Steam-Database" class="headerlink" title="Steam Database"></a>Steam Database</h2><p><strong>在Steam社区和商店中添加Steam数据库链接和新功能</strong></p><p><em>特征：</em></p><ul><li>在Steam站点之间添加到SteamDB的链接</li><li>在商店页面上显示史低价格</li><li>在游戏页面上显示在线统计</li><li>库存中的快速出售按钮</li><li>在商店跳过年龄检查</li><li>自动接受市场交易</li><li>删除链接过滤器链接</li><li>在steamdb.info上突出显示您拥有的游戏，DLC和软件包</li><li>其他许多较小的调整和功能</li></ul><p><a href="https://chrome.google.com/webstore/detail/steam-database/kdbmhfkmnlmbkgbabkdealhhbfhlmmon" target="_blank" rel="noopener">安装链接</a></p>]]></content>
      
      
      <categories>
          
          <category> 浏览器插件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Chrome </tag>
            
            <tag> 插件 </tag>
            
            <tag> 浏览器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Aria2 WebUI界面搭建</title>
      <link href="/ck67sglvi0000porx8nbrgxdv/"/>
      <url>/ck67sglvi0000porx8nbrgxdv/</url>
      
        <content type="html"><![CDATA[<p><strong>Aria2是没有图形界面的，这里介绍几款WebUI界面。</strong></p><h2 id="WebUI-Aria2"><a href="#WebUI-Aria2" class="headerlink" title="WebUI-Aria2"></a>WebUI-Aria2</h2><p><img src="https://img.hclonely.com/blog/2019/10/joDMRI.png" alt="WebUI-Aria2"></p><h3 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h3><h4 id="1-运行Aria2并开启RPC模式-配置文件中开启"><a href="#1-运行Aria2并开启RPC模式-配置文件中开启" class="headerlink" title="1.运行Aria2并开启RPC模式(配置文件中开启)"></a>1.运行Aria2并开启RPC模式(配置文件中开启)</h4><h4 id="2-打开Demo网址或自己搭建的网址"><a href="#2-打开Demo网址或自己搭建的网址" class="headerlink" title="2.打开Demo网址或自己搭建的网址"></a>2.打开<a href="https://aria2.hclonely.com/WebUI-Aria2/index.html" target="_blank" rel="noopener">Demo网址</a>或自己搭建的网址</h4><h4 id="3-点击“设置”→“链接设置”配置好Aria2-RPC-主机和端口并保存"><a href="#3-点击“设置”→“链接设置”配置好Aria2-RPC-主机和端口并保存" class="headerlink" title="3.点击“设置”→“链接设置”配置好Aria2 RPC 主机和端口并保存"></a>3.点击“设置”→“链接设置”配置好Aria2 RPC 主机和端口并保存</h4><h4 id="4-右上角提示“通过-RPC-连接到-Aria2-成功！”就可以了"><a href="#4-右上角提示“通过-RPC-连接到-Aria2-成功！”就可以了" class="headerlink" title="4.右上角提示“通过 RPC 连接到 Aria2 成功！”就可以了"></a>4.右上角提示“通过 RPC 连接到 Aria2 成功！”就可以了</h4><h3 id="搭建到本地或服务器"><a href="#搭建到本地或服务器" class="headerlink" title="搭建到本地或服务器"></a>搭建到本地或服务器</h3><h4 id="1-下载源码"><a href="#1-下载源码" class="headerlink" title="1.下载源码"></a>1.下载源码</h4><ul><li><a href="https://github.com/ziahamza/webui-aria2" target="_blank" rel="noopener">GitHub官方下载</a></li><li><a href="https://aria2.hclonely.com/download/WebUI-Aria2.zip" target="_blank" rel="noopener">备用下载</a></li></ul><h4 id="2-将下载的压缩文件里的docs文件夹解压到本地或服务器"><a href="#2-将下载的压缩文件里的docs文件夹解压到本地或服务器" class="headerlink" title="2.将下载的压缩文件里的docs文件夹解压到本地或服务器"></a>2.将下载的压缩文件里的docs文件夹解压到本地或服务器</h4><h4 id="3-搭建到本地的话直接浏览器打开docs文件夹里的index-html即可"><a href="#3-搭建到本地的话直接浏览器打开docs文件夹里的index-html即可" class="headerlink" title="3.搭建到本地的话直接浏览器打开docs文件夹里的index.html即可"></a>3.搭建到本地的话直接浏览器打开docs文件夹里的index.html即可</h4><h4 id="4-搭建到服务器的话根据你解压的目录打开相应的网址即可"><a href="#4-搭建到服务器的话根据你解压的目录打开相应的网址即可" class="headerlink" title="4.搭建到服务器的话根据你解压的目录打开相应的网址即可"></a>4.搭建到服务器的话根据你解压的目录打开相应的网址即可</h4><h2 id="AriaNg"><a href="#AriaNg" class="headerlink" title="AriaNg"></a>AriaNg</h2><p><img src="https://img.hclonely.com/blog/2019/10/eUyzCN.png" alt="AriaNg"></p><h3 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h3><h4 id="1-运行Aria2并开启RPC模式-配置文件中开启-1"><a href="#1-运行Aria2并开启RPC模式-配置文件中开启-1" class="headerlink" title="1.运行Aria2并开启RPC模式(配置文件中开启)"></a>1.运行Aria2并开启RPC模式(配置文件中开启)</h4><h4 id="2-打开Demo网址或自己搭建的网址-1"><a href="#2-打开Demo网址或自己搭建的网址-1" class="headerlink" title="2.打开Demo网址或自己搭建的网址"></a>2.打开<a href="https://aria2.hclonely.com/AriaNg/index.html" target="_blank" rel="noopener">Demo网址</a>或自己搭建的网址</h4><h4 id="3-点击“AriaNg-设置”→“RPC-6800-”配置好Aria2-RPC-主机和端口并保存"><a href="#3-点击“AriaNg-设置”→“RPC-6800-”配置好Aria2-RPC-主机和端口并保存" class="headerlink" title="3.点击“AriaNg 设置”→“RPC(**:6800)”配置好Aria2 RPC 主机和端口并保存"></a>3.点击“AriaNg 设置”→“RPC(<strong>**</strong>:6800)”配置好Aria2 RPC 主机和端口并保存</h4><h4 id="4-右上角提示“localhost-6800连接成功”就可以了"><a href="#4-右上角提示“localhost-6800连接成功”就可以了" class="headerlink" title="4.右上角提示“localhost:6800连接成功”就可以了"></a>4.右上角提示“localhost:6800连接成功”就可以了</h4><h3 id="搭建到本地或服务器-1"><a href="#搭建到本地或服务器-1" class="headerlink" title="搭建到本地或服务器"></a>搭建到本地或服务器</h3><h4 id="1-下载releases（本地搭建建议下载”AllInOne”版本）"><a href="#1-下载releases（本地搭建建议下载”AllInOne”版本）" class="headerlink" title="1.下载releases（本地搭建建议下载”AllInOne”版本）"></a>1.下载releases（本地搭建建议下载”AllInOne”版本）</h4><ul><li><a href="https://github.com/mayswind/AriaNg/releases" target="_blank" rel="noopener">GitHub官方下载</a></li><li><a href="https://aria2.hclonely.com/download/AriaNg-1.1.4.zip" target="_blank" rel="noopener">备用下载1</a></li><li><a href="https://aria2.hclonely.com/download/AriaNg-1.1.4-AllInOne.zip" target="_blank" rel="noopener">备用下载2(AllInOne)</a></li></ul><h4 id="2-将下载的压缩文件解压到本地或服务器"><a href="#2-将下载的压缩文件解压到本地或服务器" class="headerlink" title="2.将下载的压缩文件解压到本地或服务器"></a>2.将下载的压缩文件解压到本地或服务器</h4><h4 id="3-搭建到本地的话直接浏览器打开”index-html”即可"><a href="#3-搭建到本地的话直接浏览器打开”index-html”即可" class="headerlink" title="3.搭建到本地的话直接浏览器打开”index.html”即可"></a>3.搭建到本地的话直接浏览器打开”index.html”即可</h4><h4 id="4-搭建到服务器的话根据你解压的目录打开相应的网址即可-1"><a href="#4-搭建到服务器的话根据你解压的目录打开相应的网址即可-1" class="headerlink" title="4.搭建到服务器的话根据你解压的目录打开相应的网址即可"></a>4.搭建到服务器的话根据你解压的目录打开相应的网址即可</h4><h2 id="YAAW"><a href="#YAAW" class="headerlink" title="YAAW"></a>YAAW</h2><p><img src="https://img.hclonely.com/blog/2019/10/jqMOPs.png" alt="YAAW"></p><h3 id="使用方法-2"><a href="#使用方法-2" class="headerlink" title="使用方法"></a>使用方法</h3><h4 id="1-运行Aria2并开启RPC模式-配置文件中开启-2"><a href="#1-运行Aria2并开启RPC模式-配置文件中开启-2" class="headerlink" title="1.运行Aria2并开启RPC模式(配置文件中开启)"></a>1.运行Aria2并开启RPC模式(配置文件中开启)</h4><h4 id="2-打开Demo网址或自己搭建的网址；"><a href="#2-打开Demo网址或自己搭建的网址；" class="headerlink" title="2.打开Demo网址或自己搭建的网址；"></a>2.打开<a href="https://aria2.hclonely.com/yaaw/index.html" target="_blank" rel="noopener">Demo网址</a>或自己搭建的网址；</h4><h4 id="3-点击右上角“-”配置好Aria2-RPC-主机和端口并保存（不支持RPC密钥）"><a href="#3-点击右上角“-”配置好Aria2-RPC-主机和端口并保存（不支持RPC密钥）" class="headerlink" title="3.点击右上角“?”配置好Aria2 RPC 主机和端口并保存（不支持RPC密钥）"></a>3.点击右上角“?”配置好Aria2 RPC 主机和端口并保存（不支持RPC密钥）</h4><h4 id="4-提示“Saved-”就可以了"><a href="#4-提示“Saved-”就可以了" class="headerlink" title="4.提示“Saved!”就可以了"></a>4.提示“Saved!”就可以了</h4><h3 id="搭建到本地或服务器-2"><a href="#搭建到本地或服务器-2" class="headerlink" title="搭建到本地或服务器"></a>搭建到本地或服务器</h3><h4 id="1-下载源码-1"><a href="#1-下载源码-1" class="headerlink" title="1.下载源码"></a>1.下载源码</h4><ul><li><a href="https://github.com/ghostry/yaaw" target="_blank" rel="noopener">GitHub官方下载</a></li><li><a href="https://aria2.hclonely.com/download/yaaw.zip" target="_blank" rel="noopener">备用下载</a></li></ul><h4 id="2-将下载的压缩文件解压到本地或服务器-1"><a href="#2-将下载的压缩文件解压到本地或服务器-1" class="headerlink" title="2.将下载的压缩文件解压到本地或服务器"></a>2.将下载的压缩文件解压到本地或服务器</h4><h4 id="3-搭建到本地的话直接浏览器打开”index-html”即可-1"><a href="#3-搭建到本地的话直接浏览器打开”index-html”即可-1" class="headerlink" title="3.搭建到本地的话直接浏览器打开”index.html”即可"></a>3.搭建到本地的话直接浏览器打开”index.html”即可</h4><h4 id="4-搭建到服务器的话根据你解压的目录打开相应的网址即可-2"><a href="#4-搭建到服务器的话根据你解压的目录打开相应的网址即可-2" class="headerlink" title="4.搭建到服务器的话根据你解压的目录打开相应的网址即可"></a>4.搭建到服务器的话根据你解压的目录打开相应的网址即可</h4><h2 id="Photon-WebUI"><a href="#Photon-WebUI" class="headerlink" title="Photon-WebUI"></a>Photon-WebUI</h2><p><img src="https://img.hclonely.com/blog/2019/10/N1MlhE.png" alt="Photon-WebUI"></p><h3 id="使用方法-3"><a href="#使用方法-3" class="headerlink" title="使用方法"></a>使用方法</h3><h4 id="1-运行Aria2并开启RPC模式-配置文件中开启-3"><a href="#1-运行Aria2并开启RPC模式-配置文件中开启-3" class="headerlink" title="1.运行Aria2并开启RPC模式(配置文件中开启)"></a>1.运行Aria2并开启RPC模式(配置文件中开启)</h4><h4 id="2-打开Demo网址或自己搭建的网址-2"><a href="#2-打开Demo网址或自己搭建的网址-2" class="headerlink" title="2.打开Demo网址或自己搭建的网址"></a>2.打开<a href="https://aria2.hclonely.com/Photon-WebUI/index.html" target="_blank" rel="noopener">Demo网址</a>或自己搭建的网址</h4><h4 id="3-点击“设置”配置好Aria2-RPC-主机和端口"><a href="#3-点击“设置”配置好Aria2-RPC-主机和端口" class="headerlink" title="3.点击“设置”配置好Aria2 RPC 主机和端口"></a>3.点击“设置”配置好Aria2 RPC 主机和端口</h4><h4 id="4-状态显示“已连接”就可以了"><a href="#4-状态显示“已连接”就可以了" class="headerlink" title="4.状态显示“已连接”就可以了"></a>4.状态显示“已连接”就可以了</h4><h3 id="搭建到本地或服务器-3"><a href="#搭建到本地或服务器-3" class="headerlink" title="搭建到本地或服务器"></a>搭建到本地或服务器</h3><h4 id="1-下载源码-2"><a href="#1-下载源码-2" class="headerlink" title="1.下载源码"></a>1.下载源码</h4><ul><li><a href="https://github.com/alanzhangzm/Photon-WebUI" target="_blank" rel="noopener">GitHub官方下载</a></li><li><a href="http://aria2.hclonely.com/download/Photon-WebUI-0.2.0.zip" target="_blank" rel="noopener">备用下载</a></li></ul><h4 id="2-将下载的压缩文件里的”docs”文件夹解压到本地或服务器"><a href="#2-将下载的压缩文件里的”docs”文件夹解压到本地或服务器" class="headerlink" title="2.将下载的压缩文件里的”docs”文件夹解压到本地或服务器"></a>2.将下载的压缩文件里的”docs”文件夹解压到本地或服务器</h4><h4 id="3-搭建到本地的话直接浏览器打开”docs”文件夹里的”index-html”即可"><a href="#3-搭建到本地的话直接浏览器打开”docs”文件夹里的”index-html”即可" class="headerlink" title="3.搭建到本地的话直接浏览器打开”docs”文件夹里的”index.html”即可"></a>3.搭建到本地的话直接浏览器打开”docs”文件夹里的”index.html”即可</h4><h4 id="4-搭建到服务器的话根据你解压的目录打开相应的网址即可-3"><a href="#4-搭建到服务器的话根据你解压的目录打开相应的网址即可-3" class="headerlink" title="4.搭建到服务器的话根据你解压的目录打开相应的网址即可"></a>4.搭建到服务器的话根据你解压的目录打开相应的网址即可</h4>]]></content>
      
      
      
        <tags>
            
            <tag> Aria2 </tag>
            
            <tag> WebUI </tag>
            
            <tag> 图形界面 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS精简代码合集</title>
      <link href="/ck67sglvz0005porx1uuo01ym/"/>
      <url>/ck67sglvz0005porx1uuo01ym/</url>
      
        <content type="html"><![CDATA[<p><strong>单行简洁的代码很难维护（有时甚至难以理解），但这并不能阻止广大攻城狮们脑洞，在编写简洁的代码后获得一定的满足感。</strong></p><p>以下我收藏的一些javascript精简代码。它们都可以在你的开发控制台中运行，你可以从控制台中查看运行结果。</p><h2 id="获取URL的查询参数"><a href="#获取URL的查询参数" class="headerlink" title="获取URL的查询参数"></a>获取URL的查询参数</h2><p><strong>获取URL的查询参数代码我在网上搜过，也自己写过，不过这个是我见过最精简的！</strong></p><pre><code class="javascript">// 获取URL的查询参数q={};location.search.replace(/([^?&amp;=]+)=([^&amp;]+)/g,(_,k,v)=&gt;q[k]=v);q;</code></pre><p><strong>同理可以得到处理cookie代码：</strong></p><pre><code class="javascript">// 处理cookiec={};document.cookie.replace(/([^; ]+)=([^; ]+)/g,(_,k,v)=&gt;c[k]=v);c;</code></pre><h2 id="生成随机随机颜色（生成随机十六进制数）"><a href="#生成随机随机颜色（生成随机十六进制数）" class="headerlink" title="生成随机随机颜色（生成随机十六进制数）"></a>生成随机随机颜色（生成随机十六进制数）</h2><pre><code class="javascript">// 生成随机随机颜色（生成随机十六进制数） 如：&quot;#1f416d&quot;&#39;#&#39; + Math.floor(Math.random() * 0xffffff).toString(16).padEnd(6, &#39;0&#39;);</code></pre><h2 id="数组去重"><a href="#数组去重" class="headerlink" title="数组去重"></a>数组去重</h2><p><strong>利用ES6的Set函数进行数组去重</strong></p><pre><code class="javascript">// 数组去重[...new Set(arr)]</code></pre><h2 id="返回一个键盘"><a href="#返回一个键盘" class="headerlink" title="返回一个键盘"></a>返回一个键盘</h2><p><strong>返回一个图形键盘，真的是键盘！！！</strong></p><pre><code class="javascript">// 用字符串返回一个键盘图形(_=&gt;[...&quot;`1234567890-=~~QWERTYUIOP[]\\~ASDFGHJKL;&#39;~~ZXCVBNM,./~&quot;].map(x=&gt;(o+=`/${b=&#39;_&#39;.repeat(w=x&lt;y?2:&#39; 667699&#39;[x=[&quot;BS&quot;,&quot;TAB&quot;,&quot;CAPS&quot;,&quot;ENTER&quot;][p++]||&#39;SHIFT&#39;,p])}\\|`,m+=y+(x+&#39;    &#39;).slice(0,w)+y+y,n+=y+b+y+y,l+=&#39; __&#39;+b)[73]&amp;&amp;(k.push(l,m,n,o),l=&#39;&#39;,m=n=o=y),m=n=o=y=&#39;|&#39;,p=l=k=[])&amp;&amp;k.join``)()</code></pre>]]></content>
      
      
      <categories>
          
          <category> jsvascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jsvascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NodeJs读取某目录下所有目录和文件名</title>
      <link href="/ck67sglw6000aporx9hwh78zf/"/>
      <url>/ck67sglw6000aporx9hwh78zf/</url>
      
        <content type="html"><![CDATA[<p><strong>代码如下：</strong></p><pre><code class="javascript">const path = require(&quot;path&quot;);const fs = require(&quot;fs&quot;);const pathName = &quot;./&quot;;//要读取的文件夹路径，windows系统路径&quot;\&quot;要转义，如：&quot;C:\\Users\\user\\Desktop&quot;fs.readdir(pathName, function(err, files){    let fileArr = [];    let dirArr = [];    let otherArr = [];    (function iterator(i){        if(i == files.length) {//读取完成输出            console.log({&quot;files&quot;:fileArr,&quot;dirs&quot;:dirArr,&quot;others&quot;:otherArr});            return ;        }        fs.stat(path.join(pathName, files[i]), function(err, data){                 if(data.isFile()){//判断是否为文件                fileArr.push(path.extname(files[i]));            }else if(data.isDirectory()){//判断是否为文件夹/目录                dirArr.push(files[i]);            }else{//其他类型，如快捷方式                otherArr.push(files[i]);            }            iterator(i+1);        });    })(0);});</code></pre>]]></content>
      
      
      <categories>
          
          <category> jsvascript </category>
          
          <category> Linux </category>
          
          <category> NodeJs </category>
          
          <category> windows </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>实用bat脚本</title>
      <link href="/ck67sgly3002sporxfx68a0k9/"/>
      <url>/ck67sgly3002sporxfx68a0k9/</url>
      
        <content type="html"><![CDATA[<h2 id="将所有子文件夹里的文件上移一层"><a href="#将所有子文件夹里的文件上移一层" class="headerlink" title="将所有子文件夹里的文件上移一层"></a>将所有子文件夹里的文件上移一层</h2><h3 id="1-覆盖同名文件"><a href="#1-覆盖同名文件" class="headerlink" title="1.覆盖同名文件"></a>1.覆盖同名文件</h3><pre><code class="bash">@echo off(for /f &quot;delims=&quot; %%a in (&#39;dir /b /s /ad&#39;) do (        move /y &quot;%%a\*.*&quot; &quot;%%a\..&quot;&amp;&amp;rd %%a))&gt;nul 2&gt;nulfor /f &quot;delims=&quot; %%i in (&#39;dir /ad /b /s^|sort /r&#39;) do rd /q &quot;%%i&quot; 2&gt;nulpause</code></pre><h3 id="2-选择是否覆盖同名文件"><a href="#2-选择是否覆盖同名文件" class="headerlink" title="2. 选择是否覆盖同名文件"></a>2. 选择是否覆盖同名文件</h3><pre><code class="bash">@echo off(for /f &quot;delims=&quot; %%a in (&#39;dir /b /s /ad&#39;) do (        move /-y &quot;%%a\*.*&quot; &quot;%%a\..&quot;&amp;&amp;rd %%a))&gt;nul 2&gt;nulfor /f &quot;delims=&quot; %%i in (&#39;dir /ad /b /s^|sort /r&#39;) do rd /q &quot;%%i&quot; 2&gt;nulpause</code></pre><h2 id="将当前文件夹里子文件夹里的文件移动到all文件夹"><a href="#将当前文件夹里子文件夹里的文件移动到all文件夹" class="headerlink" title="将当前文件夹里子文件夹里的文件移动到all文件夹"></a>将当前文件夹里子文件夹里的文件移动到<code>all</code>文件夹</h2><pre><code class="bash">for /f &quot;delims=&quot; %%p in (&#39;dir /b/ad&#39;) do move %%p\*.* all\pause</code></pre>]]></content>
      
      
      <categories>
          
          <category> windows </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Linux ownCloud私有云搭建</title>
      <link href="/ck67sglw20006porx6g302dmj/"/>
      <url>/ck67sglw20006porx6g302dmj/</url>
      
        <content type="html"><![CDATA[<p><strong>关于ownCloud<br>&emsp;&emsp;ownCloud是一个开源免费专业的私有云存储项目，它能帮你快速在个人电脑或服务器上架设一套专属的私有云文件同步网盘，可以像 百度云那样实现文件跨平台同步、共享、版本控制、团队协作等等。ownCloud 能让你将所有的文件掌握在自己的手中，只要你的设备性能和空间充足，那么用起来几乎没有任何限制。<br>&emsp;&emsp;ownCloud支持 <em>Windows<em>、</em>Mac<em>、</em>Android<em>、</em>iOS<em>、</em>Linux</em> 等平台，而且还提供了网页版和 WebDAV 形式访问，因此你可以在任何电脑、手机上都能轻松获取你的文件。<br>&emsp;&emsp;本篇文章主要介绍了如何在LNMP环境下搭建ownCloud.</strong></p><h2 id="需求环境-括号内为博主使用的环境，基于宝塔面板安装"><a href="#需求环境-括号内为博主使用的环境，基于宝塔面板安装" class="headerlink" title="需求环境(括号内为博主使用的环境，基于宝塔面板安装)"></a>需求环境(括号内为博主使用的环境，基于宝塔面板安装)</h2><ul><li>系统: CentOS Linux 7+(CentOS Linux 7.2.1511 64bit)</li><li>web服务器: Nginx 1.16+(Nginx 1.16.1)</li><li>数据库: MySQL 5.5+(MySQL 5.5.62)</li><li>PHP: 5.6&lt;PHP&lt;7.3(PHP 7.2)<ul><li>额外PHP扩展(括号内为建议安装):acpu,redis,fileinfo(opcache,memcache,memcached)</li></ul></li></ul><h2 id="安装ownCloud"><a href="#安装ownCloud" class="headerlink" title="安装ownCloud"></a>安装ownCloud</h2><h3 id="1-安装dnf包-系统内已安装可跳过此步骤"><a href="#1-安装dnf包-系统内已安装可跳过此步骤" class="headerlink" title="1.安装dnf包(系统内已安装可跳过此步骤):"></a>1.安装<em>dnf</em>包(系统内已安装可跳过此步骤):</h3><p><code>yum install dnf</code></p><h3 id="2-安装dnf-config-manager命令-系统内已安装可跳过此步骤"><a href="#2-安装dnf-config-manager命令-系统内已安装可跳过此步骤" class="headerlink" title="2.安装dnf config-manager命令(系统内已安装可跳过此步骤):"></a>2.安装<em>dnf config-manager</em>命令(系统内已安装可跳过此步骤):</h3><p><code>dnf install &#39;dnf-command(config-manager)&#39;</code></p><h3 id="3-添加新的ownCloud软件源"><a href="#3-添加新的ownCloud软件源" class="headerlink" title="3.添加新的ownCloud软件源:"></a>3.添加新的ownCloud软件源:</h3><p><code>rpm --import https://download.owncloud.org/download/repositories/production/CentOS_7/repodata/repomd.xml.key</code></p><h3 id="4-安装ownCloud-files"><a href="#4-安装ownCloud-files" class="headerlink" title="4.安装ownCloud-files:"></a>4.安装ownCloud-files:</h3><pre><code class="shell">dnf config-manager --add-repo http://download.owncloud.org/download/repositories/production/CentOS_7/ce:stable.repodnf clean alldnf install owncloud-files</code></pre><h3 id="5-检查是否安装成功"><a href="#5-检查是否安装成功" class="headerlink" title="5. 检查是否安装成功:"></a>5. 检查是否安装成功:</h3><p>如果<code>/var/www/html</code>文件夹内有<code>owncloud</code>文件夹，说明安装成功。</p><h3 id="6-修改根目录-可选"><a href="#6-修改根目录-可选" class="headerlink" title="6. 修改根目录(可选)"></a>6. 修改根目录(可选)</h3><p>直接复制<code>owncloud</code>文件夹到目标文件夹即可(<strong>要保留一份后面可能会用到</strong>)</p><h2 id="添加网站"><a href="#添加网站" class="headerlink" title="添加网站"></a>添加网站</h2><p>将网站根目录指向<code>.../owncloud</code>即可:</p><pre><code class="conf">server{    listen 80;    server_name 你的服务器ip或域名;    index index.php index.html index.htm default.php default.htm default.html;    root .../owncloud/;    #SSL-START SSL相关配置，请勿删除或修改下一行带注释的404规则    #error_page 404/404.html;    #SSL-END    #ERROR-PAGE-START  错误页配置，可以注释、删除或修改    #error_page 404 /404.html;    #error_page 502 /502.html;    #ERROR-PAGE-END    #PHP-INFO-START  PHP引用配置，可以注释或修改    include enable-php-72.conf;    #PHP-INFO-END    #REWRITE-START URL重写规则引用,修改后将导致面板设置的伪静态规则失效    include /www/server/panel/vhost/rewrite/your.conf;    #REWRITE-END    #禁止访问的文件或目录    location ~ ^/(\.user.ini|\.htaccess|\.git|\.svn|\.project|LICENSE|README.md)    {        return 404;    }    #防盗链配置    location ~ .*\.(gif|jpg|jpeg|png|bmp|swf)$    {        expires      30d;        error_log off;        access_log /dev/null;    }    location ~ .*\.(js|css)?$    {        expires      12h;        error_log off;        access_log /dev/null;     }    access_log  /www/wwwlogs/your.log;    error_log  /www/wwwlogs/your.error.log;}</code></pre><h2 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h2><p>创建数据库并记住数<code>据库名</code>,<code>用户名</code>,<code>密码</code>。</p><h2 id="配置数据库及管理员帐号"><a href="#配置数据库及管理员帐号" class="headerlink" title="配置数据库及管理员帐号"></a>配置数据库及管理员帐号</h2><p>访问你的网站(ip或域名)看到如下内容(报错请给根目录”775”或”777”权限):</p><p><img src="https://img.hclonely.com/blog/2019/10/006brDXlly1g7ldu7hya4j31460l0hcf.jpg" alt="初次访问"></p><ul><li>输入管理员帐号密码(需要记住)</li><li>数据目录可不修改</li><li>数据库选择<em>MySQL/MariaDB</em>并输入数据库名、帐号、密码、主机名及端口号(默认localhost:3306)</li></ul><p>填完上述内容后点击安装完成可看到如下内容:</p><p><img src="https://img.hclonely.com/blog/2019/10/006brDXlly1g7ldzu1721j31460l01kx.jpg" alt="登录"></p><p>输入之前输入的<strong>管理员帐号密码</strong>登录即可。</p><h2 id="安全及设置警告"><a href="#安全及设置警告" class="headerlink" title="安全及设置警告"></a>安全及设置警告</h2><h3 id="1-PHP-似乎没有设置好查询的系统环境变量。-用-getenv-quot-PATH-quot-测试只返回一个空值。请检查-PHP-配置说明和服务器的-PHP-配置-安装文档-↗，使用-PHP-FPM-时尤其注意。"><a href="#1-PHP-似乎没有设置好查询的系统环境变量。-用-getenv-quot-PATH-quot-测试只返回一个空值。请检查-PHP-配置说明和服务器的-PHP-配置-安装文档-↗，使用-PHP-FPM-时尤其注意。" class="headerlink" title="1.PHP 似乎没有设置好查询的系统环境变量。 用 getenv(&quot;PATH&quot;) 测试只返回一个空值。请检查 PHP 配置说明和服务器的 PHP 配置 安装文档 ↗，使用 PHP-FPM 时尤其注意。"></a>1.PHP 似乎没有设置好查询的系统环境变量。 用 getenv(&quot;PATH&quot;) 测试只返回一个空值。请检查 PHP 配置说明和服务器的 PHP 配置 安装文档 ↗，使用 PHP-FPM 时尤其注意。</h3><p><strong>找到<code>/www/server/php/72/etc</code>目录，编辑<code>php-fpm.conf</code>文件，找到如下内容(没有则添加如下内容)</strong></p><pre><code class="conf">;env[HOSTNAME] = $HOSTNAME;env[PATH] = /usr/local/bin:/usr/bin:/bin;env[TMP] = /tmp;env[TMPDIR] = /tmp;env[TEMP] = /tmp</code></pre><p><strong>去掉前面的’;’并保存。</strong></p><h3 id="2-事务文件锁定应配置为使用基于内存的锁定，而不是默认的基于慢速数据库的锁定。有关详细信息，请参阅-文档-↗。"><a href="#2-事务文件锁定应配置为使用基于内存的锁定，而不是默认的基于慢速数据库的锁定。有关详细信息，请参阅-文档-↗。" class="headerlink" title="2.事务文件锁定应配置为使用基于内存的锁定，而不是默认的基于慢速数据库的锁定。有关详细信息，请参阅 文档 ↗。"></a>2.事务文件锁定应配置为使用基于内存的锁定，而不是默认的基于慢速数据库的锁定。有关详细信息，请参阅 文档 ↗。</h3><p><strong>编辑<code>.../owncloud/config/</code>目录下的<code>config.php</code>文件，添加如下内容(需安装前面提到的额外PHP扩展)：</strong></p><pre><code class="php">&#39;memcache.local&#39; =&gt; &#39;\\OC\\Memcache\\APCu&#39;,&#39;memcache.locking&#39; =&gt; &#39;\\OC\\Memcache\\Redis&#39;,&#39;redis&#39; =&gt; array (  &#39;host&#39; =&gt; &#39;localhost&#39;,  &#39;port&#39; =&gt; 6379,),</code></pre><p><strong>保存即可。</strong></p><h3 id="3-我们建议启用系统-cron，任何其他-cron-方法可能对性能和可靠性有影响。"><a href="#3-我们建议启用系统-cron，任何其他-cron-方法可能对性能和可靠性有影响。" class="headerlink" title="3.我们建议启用系统 cron，任何其他 cron 方法可能对性能和可靠性有影响。"></a>3.我们建议启用系统 cron，任何其他 cron 方法可能对性能和可靠性有影响。</h3><p>添加计划任务:</p><ul><li>任务类型:Shell脚本</li><li>任务名称:随便取一个</li><li>执行周期:N分钟 15分</li><li>脚本内容:<code>sudo -u www /www/server/php/72/bin/php -f .../owncloud/cron.php</code><strong>(“…”要根据自己的实际情况修改)</strong></li></ul><p>设置中计划任务改为<code>Cron</code></p><p><img src="https://img.hclonely.com/blog/2019/10/006brDXlly1g7lf0g13exj31460l00us.jpg" alt="计划任务"></p><h3 id="4-您正在通过-HTTP-访问该站点，我们强烈建议您按照安全提示配置服务器强制使用-HTTPS。"><a href="#4-您正在通过-HTTP-访问该站点，我们强烈建议您按照安全提示配置服务器强制使用-HTTPS。" class="headerlink" title="4.您正在通过 HTTP 访问该站点，我们强烈建议您按照安全提示配置服务器强制使用 HTTPS。"></a>4.您正在通过 HTTP 访问该站点，我们强烈建议您按照安全提示配置服务器强制使用 HTTPS。</h3><p>给网站配置SSL证书，启用HTTPS即可。</p><h3 id="5-HTTP-严格传输安全（Strict-Transport-Security）报头未配置到至少“15552000”秒。处于增强安全性考虑，我们推荐按照安全提示启用-HSTS。"><a href="#5-HTTP-严格传输安全（Strict-Transport-Security）报头未配置到至少“15552000”秒。处于增强安全性考虑，我们推荐按照安全提示启用-HSTS。" class="headerlink" title="5.HTTP 严格传输安全（Strict-Transport-Security）报头未配置到至少“15552000”秒。处于增强安全性考虑，我们推荐按照安全提示启用 HSTS。"></a>5.HTTP 严格传输安全（Strict-Transport-Security）报头未配置到至少“15552000”秒。处于增强安全性考虑，我们推荐按照安全提示启用 HSTS。</h3><p>编辑网站配置文件，添加如下代码:<br><code>add_header Strict-Transport-Security &quot;max-age=63072000; includeSubdomains; preload&quot;;</code></p><h3 id="6-你的数据目录和你的文件可能从互联网被访问到。-htaccess-文件不工作。我们强烈建议你配置你的网页服务器，使数据目录不再可访问，或者将数据目录移动到网页服务器根文档目录之外。"><a href="#6-你的数据目录和你的文件可能从互联网被访问到。-htaccess-文件不工作。我们强烈建议你配置你的网页服务器，使数据目录不再可访问，或者将数据目录移动到网页服务器根文档目录之外。" class="headerlink" title="6.你的数据目录和你的文件可能从互联网被访问到。.htaccess 文件不工作。我们强烈建议你配置你的网页服务器，使数据目录不再可访问，或者将数据目录移动到网页服务器根文档目录之外。"></a>6.你的数据目录和你的文件可能从互联网被访问到。.htaccess 文件不工作。我们强烈建议你配置你的网页服务器，使数据目录不再可访问，或者将数据目录移动到网页服务器根文档目录之外。</h3><p>编辑网站配置文件，添加如下代码:</p><pre><code class="conf">location ~ ^/(data|config|\.ht|db_structure\.xml|README) {    deny all;}</code></pre><h3 id="7-PHP-无法访问-dev-urandom-由于安全原因-这是强烈不推荐的"><a href="#7-PHP-无法访问-dev-urandom-由于安全原因-这是强烈不推荐的" class="headerlink" title="7.PHP 无法访问 /dev/urandom, 由于安全原因, 这是强烈不推荐的."></a>7.PHP 无法访问 /dev/urandom, 由于安全原因, 这是强烈不推荐的.</h3><p>编辑<code>.../owncloud</code>目录下的<code>.user.ini</code>文件，改为如下内容:</p><pre><code class="ini">upload_max_filesize=513Mpost_max_size=513Mmemory_limit=512Mmbstring.func_overload=0always_populate_raw_post_data=-1default_charset=&#39;UTF-8&#39;output_buffering=0</code></pre><h3 id="8-一些文件没有通过完整性检查。如何解决此问题的详细信息可以查看我们的-文档-无效文件列表…-重新扫描…"><a href="#8-一些文件没有通过完整性检查。如何解决此问题的详细信息可以查看我们的-文档-无效文件列表…-重新扫描…" class="headerlink" title="8.一些文件没有通过完整性检查。如何解决此问题的详细信息可以查看我们的 文档. (无效文件列表… / 重新扫描…)"></a>8.一些文件没有通过完整性检查。如何解决此问题的详细信息可以查看我们的 文档. (无效文件列表… / 重新扫描…)</h3><p>跟之前保留的<code>owncloud</code>文件夹里的内容比较一下，看看有哪些文件不同替换过来就行(<strong>注意隐藏文件</strong>)</p><h2 id="邮箱配置"><a href="#邮箱配置" class="headerlink" title="邮箱配置"></a>邮箱配置</h2><ul><li>在<code>设置 &gt; 个人 &gt; 常规</code>中设置好管理员邮箱地址并保存</li><li>按下图配置好<strong>电子邮件服务器</strong>(以QQ邮箱为例，<strong>不要和上面使用同一个邮箱</strong>)<a href="https://www.baidu.com/s?ie=utf-8&f=3&rsv_bp=1&ch=&tn=baidu&bar=&wd=qq%E9%82%AE%E7%AE%B1smtp%E8%AE%BE%E7%BD%AE&oq=smtp%25E8%25AE%25BE%25E7%25BD%25AE&rsv_pq=9a0979000000eac7&rsv_t=f83a3KFhWkpW6TId%2FD2Iw5tyFH5uV0QQiVmc%2FNTC0kVZ3KZoC%2BSrhsjUJsY&rqlang=cn&rsv_enter=1&prefixsug=smtp%25E8%25AE%25BE%25E7%25BD%25AE&rsp=2&rsv_dl=ts_2" target="_blank" rel="noopener">如何配置？</a></li></ul><p><img src="https://img.hclonely.com/blog/2019/10/006brDXlly1g7lz7j7bk5j31460l0766.jpg" alt="邮箱配置"></p><ul><li>配置完成后点击下面的<strong><em>发送邮件</em></strong>发送测试邮件，如果之前设置的管理员邮箱可以收到测试邮件说明配置成功。</li></ul>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Linux挂载硬盘</title>
      <link href="/ck67sglw40008porx1qtl6rf7/"/>
      <url>/ck67sglw40008porx1qtl6rf7/</url>
      
        <content type="html"><![CDATA[<p><strong>需求: Linux新增加一块硬盘sdb，将sdb分区，只分一个区，格式化，挂载到目录/ssd下。</strong></p><h2 id="1-查看现在已有的分区状态"><a href="#1-查看现在已有的分区状态" class="headerlink" title="1.查看现在已有的分区状态"></a>1.查看现在已有的分区状态</h2><p><code># df -l</code></p><p><img src="https://img.hclonely.com/blog/2019/10/006brDXlly1g6za4jlnj0j30fi03kmxo.jpg@!full" alt="分区状态"></p><p>图中显示，没有看到sdb硬盘</p><h2 id="2-查看服务器安装的硬盘状态（包括格式化和未格式化）"><a href="#2-查看服务器安装的硬盘状态（包括格式化和未格式化）" class="headerlink" title="2.查看服务器安装的硬盘状态（包括格式化和未格式化）"></a>2.查看服务器安装的硬盘状态（包括格式化和未格式化）</h2><p><code># fdisk -l</code><br><img src="https://img.hclonely.com/blog/2019/10/006brDXlly1g6za5t76eqj30fi0cgdi4.jpg@!full" alt="硬盘状态"></p><p>图中显示，有sdb硬盘，但是没有分区。</p><h2 id="3-添加新分区"><a href="#3-添加新分区" class="headerlink" title="3.添加新分区"></a>3.添加新分区</h2><p><code># fdisk /dev/sdb</code><br>按照以下红框输入</p><ul><li><code>{N}</code>→<code>{enter}</code></li><li><code>{P}</code>→<code>{enter}</code></li><li><code>{1}</code>→<code>{enter}</code></li><li><code>{enter}</code></li><li><code>{enter}</code></li><li><code>{W}</code>→<code>{enter}</code></li></ul><p><img src="https://img.hclonely.com/blog/2019/10/006brDXlly1g6za9rpt8kj30fi057gm5.jpg@!full" alt="添加新分区"></p><p>用以下命令查看分区<br><code># fdisk -l</code></p><p><img src="https://img.hclonely.com/blog/2019/10/006brDXlly1g6zaacq8drj30fi0500tl.jpg@!full" alt="分区"></p><p>图中红框显示已多出了一个分区，但是还没有格式化。</p><h2 id="4-格式化分区"><a href="#4-格式化分区" class="headerlink" title="4.格式化分区"></a>4.格式化分区</h2><p><code># mkfs -t ext4 -c /dev/sdb1</code></p><ul><li><code>-t</code> 制定要把磁盘格式化成什么类型</li><li><code>-c</code> 在建立文件系统之前检查坏道，可能会很费时间，新硬盘一般不需要</li></ul><p><img src="https://img.hclonely.com/blog/2019/10/006brDXlly1g6zabokpgpj30fi0b2mza.jpg@!full" alt="格式化分区"></p><h2 id="5-挂载新硬盘"><a href="#5-挂载新硬盘" class="headerlink" title="5.挂载新硬盘"></a>5.挂载新硬盘</h2><ul><li>在根目录下，建一个文件夹，待会将分区挂载在这个文件夹上，以后要往新硬盘存东西就存在新建文件夹下就可以了。<br><code># mkdir /ssd</code></li><li>挂载硬盘<br><code># mount /dev/sdb1 /ssd</code></li></ul><p><img src="https://img.hclonely.com/blog/2019/10/006brDXlly1g6zad9p990j30fi02baab.jpg@!full" alt="挂载硬盘"></p><h2 id="6-让系统开机自动挂载这块硬盘"><a href="#6-让系统开机自动挂载这块硬盘" class="headerlink" title="6.让系统开机自动挂载这块硬盘"></a>6.让系统开机自动挂载这块硬盘</h2><p>编辑<code>/etc/fstaba</code>文件，在最末尾增加如下代码：<br><code>/dev/sda1 /ssd ext4 defaults 0 0</code></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 硬盘 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux下aria2的安装与配置</title>
      <link href="/ck67sglwb000fporxgvaedg8c/"/>
      <url>/ck67sglwb000fporxgvaedg8c/</url>
      
        <content type="html"><![CDATA[<p><strong>这里来介绍一下linux系统下的安装与配置</strong></p><h2 id="Ubuntu"><a href="#Ubuntu" class="headerlink" title="Ubuntu"></a>Ubuntu</h2><p>ubuntu的用户可以直接使用下面命令完成aria2的安装:<br><code>sudo apt-get install aria2</code></p><h2 id="CentOS"><a href="#CentOS" class="headerlink" title="CentOS"></a>CentOS</h2><h3 id="1-下载"><a href="#1-下载" class="headerlink" title="1.下载"></a>1.下载</h3><ul><li>到githup上获取源码：<a href="https://github.com/aria2/aria2/releases" target="_blank" rel="noopener">https://github.com/aria2/aria2/releases</a></li><li><a href="https://hclonely-cdn.oss-cn-hongkong.aliyuncs.com/aria2-1.35.0.tar.gz" target="_blank" rel="noopener">备用下载</a><br>我使用的是这个版本:<br><a href="https://github.com/aria2/aria2/releases/download/release-1.35.0/aria2-1.35.0.tar.gz" target="_blank" rel="noopener">https://github.com/aria2/aria2/releases/download/release-1.35.0/aria2-1.35.0.tar.gz</a></li><li>定位到aria2目录并输入以下命令下载:<br><code>cd /ssd/aria2 &amp;&amp; wget https://github.com/aria2/aria2/releases/download/release-1.35.0/aria2-1.35.0.tar.gz</code></li></ul><h3 id="2-升级gcc"><a href="#2-升级gcc" class="headerlink" title="2.升级gcc"></a>2.升级gcc</h3><p>编译aria2需要升级一下gcc，最低要求 gcc &gt;= 4.8.2，使用<code>gcc --version</code>查看当前gcc版本，<strong>如果你的gcc已经在符合这个要求就可以跳到下一步了</strong><br>复制下面代码，保存为：update_gcc.sh</p><pre><code class="bash"># 添加一个源cd /etc/yum.repos.dwget http://people.centos.org/tru/devtools-2/devtools-2.repo# 安装所需包yum install devtoolset-2-gcc devtoolset-2-binutils devtoolset-2-gcc-c++# 保存原来的版本mv /usr/bin/gcc /usr/bin/gcc-4.4.7mv /usr/bin/g++ /usr/bin/g++-4.4.7mv /usr/bin/c++ /usr/bin/c++-4.4.7# 链接到新版本的gccln -s /opt/rh/devtoolset-2/root/usr/bin/gcc /usr/bin/gccln -s /opt/rh/devtoolset-2/root/usr/bin/c++ /usr/bin/c++ln -s /opt/rh/devtoolset-2/root/usr/bin/g++ /usr/bin/g++# 查看当前gcc版本gcc --version</code></pre><p>给予update_gcc.sh文件可执行权限并执行<br><code>chmod 754 update_gcc.sh &amp;&amp; ./update_gcc.sh</code><br><strong><em>在执行之前需要确保安装了wget，如果没有wget的话，脚本执行会报错!!!</em></strong><br>等待完成!!!</p><h3 id="3-解压并开始编译安装"><a href="#3-解压并开始编译安装" class="headerlink" title="3.解压并开始编译安装"></a>3.解压并开始编译安装</h3><p><code>tar zxvf aria2-1.34.0.tar.gz &amp;&amp; cd aria2-1.34.0 &amp;&amp; mkdir build &amp;&amp; cd build &amp;&amp; ../configure &amp;&amp; make &amp;&amp; make install</code><br><em>比较长时间的等待~~</em></p><h3 id="4-创建目录与配置文件"><a href="#4-创建目录与配置文件" class="headerlink" title="4.创建目录与配置文件"></a>4.创建目录与配置文件</h3><pre><code class="bash"># 这一步需要切换到root下进行 # 需要 su  一下cd /ssd/www &amp;&amp; mkdir aria2 &amp;&amp; cd aria2 &amp;&amp; touch aria2.conf &amp;&amp; touch aria2.session</code></pre><p>编辑aria2.conf文件内容，内容如下:</p><pre><code class="bash"># 文件的保存路径(可使用绝对路径或相对路径), 默认: 当前启动位置#dir=~/download# 启用磁盘缓存, 0为禁用缓存, 需1.16以上版本, 默认:16Mdisk-cache=5M# 文件预分配方式, 能有效降低磁盘碎片, 默认:prealloc# 预分配所需时间: none &lt; falloc ? trunc &lt; prealloc# falloc和trunc则需要文件系统和内核支持, NTFS建议使用falloc, EXT3/4建议truncfile-allocation=none# 断点续传continue=true## 下载连接相关 ### 最大同时下载任务数, 运行时可修改, 默认:5max-concurrent-downloads=5# 同一服务器连接数, 添加时可指定, 默认:1max-connection-per-server=15# 最小文件分片大小, 添加时可指定, 取值范围1M -1024M, 默认:20M# 假定size=10M, 文件为20MiB 则使用两个来源下载; 文件为15MiB 则使用一个来源下载min-split-size=10M# 单个任务最大线程数, 添加时可指定, 默认:5split=5# 整体下载速度限制, 运行时可修改, 默认:0#max-overall-download-limit=0# 单个任务下载速度限制, 默认:0#max-download-limit=0# 整体上传速度限制, 运行时可修改, 默认:0max-overall-upload-limit=20kb# 单个任务上传速度限制, 默认:0max-upload-limit=5kb# 禁用IPv6, 默认:falsedisable-ipv6=true# 禁用https证书检查check-certificate=false#运行覆盖已存在文件allow-overwrite=true#自动重命名auto-file-renaming## 进度保存相关 ### 从会话文件中读取下载任务input-file=/etc/aria2/aria2.session# 在Aria2退出时保存`错误/未完成`的下载任务到会话文件save-session=/etc/aria2/aria2.session# 定时保存会话, 0为退出时才保存, 需1.16.1以上版本, 默认:0save-session-interval=30## RPC相关设置 ### 启用RPC, 默认:falseenable-rpc=true# 允许所有来源, 默认:falserpc-allow-origin-all=true# 允许非外部访问, 默认:falserpc-listen-all=true# 事件轮询方式, 取值:[epoll, kqueue, port, poll, select], 不同系统默认值不同#event-poll=select# RPC监听端口, 端口被占用时可以修改, 默认:6800rpc-listen-port=6800# 保存上传的种子文件rpc-save-upload-metadata=false## BT/PT下载相关 ### 当下载的是一个种子(以.torrent结尾)时, 自动开始BT任务, 默认:true#follow-torrent=true# BT监听端口, 当端口被屏蔽时使用, 默认:6881-6999listen-port=51413# 单个种子最大连接数, 默认:55#bt-max-peers=55# 打开DHT功能, PT需要禁用, 默认:trueenable-dht=true# 打开IPv6 DHT功能, PT需要禁用enable-dht6=false# DHT网络监听端口, 默认:6881-6999#dht-listen-port=6881-6999# 本地节点查找, PT需要禁用, 默认:falsebt-enable-lpd=true# 种子交换, PT需要禁用, 默认:trueenable-peer-exchange=true# 每个种子限速, 对少种的PT很有用, 默认:50K#bt-request-peer-speed-limit=50K# 客户端伪装, PT需要peer-id-prefix=-UT341-user-agent=uTorrent/341(109279400)(30888)# 当种子的分享率达到这个数时, 自动停止做种, 0为一直做种, 默认:1.0seed-ratio=1.0# 强制保存会话, 话即使任务已经完成, 默认:false# 较新的版本开启后会在任务完成后依然保留.aria2文件#force-save=false# BT校验相关, 默认:true#bt-hash-check-seed=true# 继续之前的BT任务时, 无需再次校验, 默认:falsebt-seed-unverified=true# 保存磁力链接元数据为种子文件(.torrent文件), 默认:false#bt-save-metadata=false#仅下载种子文件bt-metadata-only=true#通过网上的种子文件下载，种子保存在内存follow-torrent=mem</code></pre><h3 id="5-设置环境变量"><a href="#5-设置环境变量" class="headerlink" title="5.设置环境变量"></a>5.设置环境变量</h3><ul><li>编辑~/.bashrc文件,加入下面内容<br><code>export PATH=/usr/local/src/aria2-1.33.0/build/src:$PATH</code></li><li>执行下面命令，使环境变量设置生效：<br><code>source ~/.bashrc</code></li><li>完成这一系列操作后，输入 aria  并可以补全的话就说明aria2已经安装成功了!!!<br>然后，你就可以使用aria2下载你的bt种子或磁力链了，执行<code>aria2c -h</code>查看<strong>使用说明</strong></li></ul><h3 id="6-处理aria2下载bt种子或磁力链无速度或速度慢的情况，添加tracker"><a href="#6-处理aria2下载bt种子或磁力链无速度或速度慢的情况，添加tracker" class="headerlink" title="6.处理aria2下载bt种子或磁力链无速度或速度慢的情况，添加tracker"></a>6.处理aria2下载bt种子或磁力链无速度或速度慢的情况，添加tracker</h3><p>在aria2c.conf文件中添加下面内容:</p><pre><code class="text">bt-tracker=tracker url.....例如:bt-tracker=udp://tracker.coppersurfer.tk:6969/announce,udp://tracker.open-internet.nl:6969/announce,udp://tracker.leechers-paradise.org:6969/announce,udp://tracker.opentrackr.org:1337/announce,http://tracker.internetwarriors.net:1337/announce,udp://9.rarbg.to:2710/announce,udp://exodus.desync.com:6969/announce,http://tracker3.itzmx.com:6961/announce,udp://explodie.org:6969/announce,udp://ipv4.tracker.harry.lu:80/announce,udp://denis.stalker.upeer.me:6969/announce,udp://tracker4.itzmx.com:2710/announce,udp://tracker.tiny-vps.com:6969/announce,udp://tracker.port443.xyz:6969/announce,udp://thetracker.org:80/announce,udp://open.stealth.si:80/announce,udp://open.demonii.si:1337/announce,udp://bt.xxx-tracker.com:2710/announce,udp://tracker1.wasabii.com.tw:6969/announce,udp://tracker.torrent.eu.org:451/announce</code></pre><p>tracker 地址自行到这里取最新的添加，每个地址之间以逗号分开:<br><a href="https://github.com/ngosang/trackerslist" target="_blank" rel="noopener">https://github.com/ngosang/trackerslist</a></p><h3 id="7-使用以下命令后台启动"><a href="#7-使用以下命令后台启动" class="headerlink" title="7.使用以下命令后台启动:"></a>7.使用以下命令后台启动:</h3><p><code>aria2c --conf-path=/ssd/www/aria2/aria2.conf -D</code></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> 下载软件 </category>
          
          <category> 软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> aria2 </tag>
            
            <tag> 下载软件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows配置Aria2教程</title>
      <link href="/ck67sglw9000cporx67vu5eek/"/>
      <url>/ck67sglw9000cporx67vu5eek/</url>
      
        <content type="html"><![CDATA[<p><strong>&emsp;&emsp;Aria2 是一个多平台轻量级，支持 HTTP、FTP、BitTorrent 等多协议、多来源的命令行下载工具。Aria2 可以从多个来源、多个协议下载资源，最大的程度上利用了你的带宽。Aria2 有着非常小的资源占用，在关闭磁盘缓存的情况下，物理内存占用通常为 4M（正常 HTTP/FTP 下载的情况下），BitTorrent 下载每秒2.8M/S的情况下，CPU 占有率约为 6%。Aria2 支持 JSON-RPC 和 XML-RPC 接口远程调用。</strong></p><h2 id="安装前准备文件"><a href="#安装前准备文件" class="headerlink" title="安装前准备文件"></a>安装前准备文件</h2><ul><li>Aria2主程序：<ul><li><a href="https://github.com/aria2/aria2/releases" target="_blank" rel="noopener">官方下载</a></li><li><a href="https://hclonely-cdn.oss-cn-hongkong.aliyuncs.com/aria2-1.35.0-win-32bit-build1.zip" target="_blank" rel="noopener">备用下载(32位)</a></li><li><a href="https://hclonely-cdn.oss-cn-hongkong.aliyuncs.com/aria2-1.35.0-win-64bit-build1.zip" target="_blank" rel="noopener">备用下载(64位)</a></li></ul></li><li>Aria2配置文件：<ul><li><a href="https://github.com/jasmine102/Aria2-config/raw/master/aria2_conf.zip" target="_blank" rel="noopener">官方下载</a></li><li><a href="https://hclonely-cdn.oss-cn-hongkong.aliyuncs.com/aria2_conf.zip" target="_blank" rel="noopener">备用下载</a></li></ul></li><li>Aria2控制脚本：<ul><li><a href="https://github.com/jasmine102/Aria2-config/raw/master/aria2_bat.zip" target="_blank" rel="noopener">官方下载</a></li><li><a href="https://hclonely-cdn.oss-cn-hongkong.aliyuncs.com/aria2_bat.zip" target="_blank" rel="noopener">备用下载</a></li></ul></li></ul><h2 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h2><h3 id="1-将Aria2主程序-Aria2配置文件和Aria2控制脚本解压到同一目录"><a href="#1-将Aria2主程序-Aria2配置文件和Aria2控制脚本解压到同一目录" class="headerlink" title="1.将Aria2主程序,Aria2配置文件和Aria2控制脚本解压到同一目录"></a>1.将<code>Aria2主程序</code>,<code>Aria2配置文件</code>和<code>Aria2控制脚本</code>解压到同一目录</h3><h3 id="2-编辑aria2-conf文件"><a href="#2-编辑aria2-conf文件" class="headerlink" title="2.编辑aria2.conf文件"></a>2.编辑<code>aria2.conf</code>文件</h3><p><strong><code>ari2.conf</code>里已自带默认参数 ，也可根据自己的需要设置<code>ari2.conf</code>文件里的参数：</strong></p><pre><code class="yaml">## &#39;#&#39;开头为注释内容, 选项都有相应的注释说明, 根据需要修改 #### 被注释的选项填写的是默认值, 建议在需要修改时再取消注释  #### 文件保存相关 ### 文件的保存路径(可使用绝对路径或相对路径), 默认: 当前启动位置dir=Download# 启用磁盘缓存, 0为禁用缓存, 需1.16以上版本, 默认:16Mdisk-cache=32M# 文件预分配方式, 能有效降低磁盘碎片, 默认:prealloc# 预分配所需时间: none &lt; falloc &lt; trunc &lt; prealloc# NTFS建议使用fallocfile-allocation=none# 断点续传continue=true## 下载连接相关 ### 最大同时下载任务数, 运行时可修改, 默认:5max-concurrent-downloads=10# 同一服务器连接数, 添加时可指定, 默认:1max-connection-per-server=5# 最小文件分片大小, 添加时可指定, 取值范围1M -1024M, 默认:20M# 假定size=10M, 文件为20MiB 则使用两个来源下载; 文件为15MiB 则使用一个来源下载min-split-size=10M# 单个任务最大线程数, 添加时可指定, 默认:5split=20# 整体下载速度限制, 运行时可修改, 默认:0#max-overall-download-limit=0# 单个任务下载速度限制, 默认:0#max-download-limit=0# 整体上传速度限制, 运行时可修改, 默认:0max-overall-upload-limit=1M# 单个任务上传速度限制, 默认:0#max-upload-limit=1000# 禁用IPv6, 默认:falsedisable-ipv6=false## 进度保存相关 ### 从会话文件中读取下载任务input-file=aria2.session# 在Aria2退出时保存`错误/未完成`的下载任务到会话文件save-session=aria2.session# 定时保存会话, 0为退出时才保存, 需1.16.1以上版本, 默认:0#save-session-interval=60## RPC相关设置 ### 启用RPC, 默认:falseenable-rpc=true# 允许所有来源, 默认:falserpc-allow-origin-all=true# 允许非外部访问, 默认:falserpc-listen-all=true# 事件轮询方式, 取值:[epoll, kqueue, port, poll, select], 不同系统默认值不同#event-poll=select# RPC监听端口, 端口被占用时可以修改, 默认:6800#rpc-listen-port=6800# 设置的RPC授权令牌, v1.18.4新增功能, 取代 --rpc-user 和 --rpc-passwd 选项#rpc-secret=mivm.cn# 设置的RPC访问用户名, 此选项新版已废弃, 建议改用 --rpc-secret 选项#rpc-user=&lt;USER&gt;# 设置的RPC访问密码, 此选项新版已废弃, 建议改用 --rpc-secret 选项#rpc-passwd=&lt;PASSWD&gt;## BT/PT下载相关 ### 当下载的是一个种子(以.torrent结尾)时, 自动开始BT任务, 默认:truefollow-torrent=true# BT监听端口, 当端口被屏蔽时使用, 默认:6881-6999listen-port=51413# 单个种子最大连接数, 默认:55#bt-max-peers=55# 打开DHT功能, PT需要禁用, 默认:trueenable-dht=true# 打开IPv6 DHT功能, PT需要禁用#enable-dht6=false# DHT网络监听端口, 默认:6881-6999#dht-listen-port=6881-6999# 本地节点查找, PT需要禁用, 默认:false#bt-enable-lpd=true# 种子交换, PT需要禁用, 默认:trueenable-peer-exchange=true# 每个种子限速, 对少种的PT很有用, 默认:50K#bt-request-peer-speed-limit=50K# 客户端伪装, PT需要peer-id-prefix=-TR2770-user-agent=Transmission/2.77# 当种子的分享率达到这个数时, 自动停止做种, 0为一直做种, 默认:1.0seed-ratio=0.1# 强制保存会话, 即使任务已经完成, 默认:false# 较新的版本开启后会在任务完成后依然保留.aria2文件#force-save=false# BT校验相关, 默认:true#bt-hash-check-seed=true# 继续之前的BT任务时, 无需再次校验, 默认:falsebt-seed-unverified=true# 保存磁力链接元数据为种子文件(.torrent文件), 默认:false#bt-save-metadata=true</code></pre><h3 id="3-双击运行Start-bat-前台运行-或Start-vbs-后台运行-，首次运行会弹出防火墙提示，选择允许即可"><a href="#3-双击运行Start-bat-前台运行-或Start-vbs-后台运行-，首次运行会弹出防火墙提示，选择允许即可" class="headerlink" title="3.双击运行Start.bat(前台运行)或Start.vbs(后台运行)，首次运行会弹出防火墙提示，选择允许即可"></a>3.双击运行<code>Start.bat</code>(前台运行)或<code>Start.vbs</code>(后台运行)，首次运行会弹出防火墙提示，选择允许即可</h3><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><ul><li>GitHub源码： <a href="https://github.com/aria2/aria2" target="_blank" rel="noopener">https://github.com/aria2/aria2</a></li><li>官方文档： <a href="https://aria2.github.io/" target="_blank" rel="noopener">https://aria2.github.io/</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 下载软件 </category>
          
          <category> 软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> aria2 </tag>
            
            <tag> webui </tag>
            
            <tag> 下载软件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>给网页添加一个Live2D看板娘（前端）</title>
      <link href="/ck67sgly0002pporxfe7t1s4d/"/>
      <url>/ck67sgly0002pporxfe7t1s4d/</url>
      
        <content type="html"><![CDATA[<p><strong>本篇文章教大家如何给自己的网页添加一个类似右下角的Live2D看板娘。</strong></p><h2 id="使用插件"><a href="#使用插件" class="headerlink" title="使用插件"></a>使用插件</h2><p><strong>如果你的博客使用了<code>WordPress</code>,<code>Typecho</code>,<code>Emlog</code>或<code>Z-Blog</code>等框架，可以直接下载大佬们的插件使用</strong></p><ul><li>WordPress<ul><li>小白-白酱的插件（22&amp;33模型）： <a href="https://moedog.org/946.html" target="_blank" rel="noopener">https://moedog.org/946.html</a></li><li>DaiDR酱的插件（Pio模型）： <a href="https://daidr.me/archives/code-176.html" target="_blank" rel="noopener">https://daidr.me/archives/code-176.html</a></li></ul></li><li>Typecho<ul><li>泽泽酱的插件（22&amp;33模型）： <a href="https://qqdie.com/archives/l2d233.html" target="_blank" rel="noopener">https://qqdie.com/archives/l2d233.html</a></li><li>保罗酱的插件（Pio模型）： <a href="https://paugram.com/coding/add-poster-girl-with-plugin.html" target="_blank" rel="noopener">https://paugram.com/coding/add-poster-girl-with-plugin.html</a></li></ul></li><li>Emlog<ul><li>广树酱的插件（伊斯特瓦尔模型）： <a href="https://www.wikimoe.com/?post=75" target="_blank" rel="noopener">https://www.wikimoe.com/?post=75</a></li></ul></li><li>Z-Blog<ul><li>FGHRSH酱的插件（Pio&amp;Tia模型）： <a href="https://www.fghrsh.net/post/123.html" target="_blank" rel="noopener">https://www.fghrsh.net/post/123.html</a></li></ul></li></ul><h2 id="不使用插件"><a href="#不使用插件" class="headerlink" title="不使用插件"></a>不使用插件</h2><p><strong>如果你的网站没有使用有现成插件的框架，可以直接将代码写入html</strong></p><h3 id="依赖类库"><a href="#依赖类库" class="headerlink" title="依赖类库"></a>依赖类库</h3><ul><li>JQuery (<code>waifu-tips.js</code>)</li><li>JQuery UI (仅实现 <em>拖拽效果</em> 需要)</li></ul><h3 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h3><h4 id="1-下载源码"><a href="#1-下载源码" class="headerlink" title="1.下载源码"></a>1.下载源码</h4><ul><li><a href="https://github.com/fghrsh/live2d_demo" target="_blank" rel="noopener">GitHub官方下载</a></li><li><a href="https://hclonely-cdn.oss-cn-hongkong.aliyuncs.com/live2d_demo-master.zip" target="_blank" rel="noopener">备用下载</a></li></ul><h4 id="2-将assets文件夹解压到网站目录（这里以解压到根目录为例）"><a href="#2-将assets文件夹解压到网站目录（这里以解压到根目录为例）" class="headerlink" title="2.将assets文件夹解压到网站目录（这里以解压到根目录为例）"></a>2.将assets文件夹解压到网站目录（这里以解压到根目录为例）</h4><h4 id="3-引入css及js文件"><a href="#3-引入css及js文件" class="headerlink" title="3.引入css及js文件"></a>3.引入css及js文件</h4><ul><li>autoload.js 引入<ul><li>在 <code>&lt;/body&gt;</code> 前引入 <code>autoload.js</code></li></ul></li><li>常规方式引入<ul><li>在 <code>&lt;/head&gt;</code> 前引入 <code>waifu.css</code> 样式表</li><li>在 <code>&lt;/body&gt;</code> 前引入 <code>waifu-tips.js</code> 和 <code>live2d.js</code></li><li>在 <code>&lt;/body&gt;</code> 前插入 初始化 JS，可在 初始化前 设置参数</li></ul></li></ul><pre><code class="HTML">&lt;html&gt;&lt;head&gt;        · · ·   · · ·    &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://www.example.com/path/to/waifu.css&quot;/&gt;&lt;/head&gt;&lt;body&gt;        · · ·   · · ·    &lt;div class=&quot;waifu&quot;&gt;        &lt;div class=&quot;waifu-tips&quot;&gt;&lt;/div&gt;        &lt;canvas id=&quot;live2d&quot; class=&quot;live2d&quot;&gt;&lt;/canvas&gt;        &lt;div class=&quot;waifu-tool&quot;&gt;            &lt;span class=&quot;fui-home&quot;&gt;&lt;/span&gt;            &lt;span class=&quot;fui-chat&quot;&gt;&lt;/span&gt;            &lt;span class=&quot;fui-eye&quot;&gt;&lt;/span&gt;            &lt;span class=&quot;fui-user&quot;&gt;&lt;/span&gt;            &lt;span class=&quot;fui-photo&quot;&gt;&lt;/span&gt;            &lt;span class=&quot;fui-info-circle&quot;&gt;&lt;/span&gt;            &lt;span class=&quot;fui-cross&quot;&gt;&lt;/span&gt;        &lt;/div&gt;    &lt;/div&gt;    &lt;script src=&quot;path/to/waifu-tips.js&quot;&gt;&lt;/script&gt;    &lt;script src=&quot;path/to/live2d.js&quot;&gt;&lt;/script&gt;    &lt;script type=&quot;text/javascript&quot;&gt;        live2d_settings[&#39;modelId&#39;] = 1;        live2d_settings[&#39;modelTexturesId&#39;] = 87;        initModel(&quot;https://www.example.com/path/to/waifu-tips.json&quot;)    &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><h4 id="4-定制属于你的看板娘"><a href="#4-定制属于你的看板娘" class="headerlink" title="4.定制属于你的看板娘"></a>4.定制属于你的看板娘</h4><ul><li>修改 <code>waifu-tips.js</code> 顶部的设置参数(或初始化前设置)</li><li>修改 <code>waifu-tips.json</code>，定制看板娘提示语，打造专属看板娘</li></ul><h3 id="设置参数"><a href="#设置参数" class="headerlink" title="设置参数"></a>设置参数</h3><p><em>Tips： <code>waifu-tips.js</code> 已自带默认参数，如无特殊要求可跳过</em></p><ul><li>后端接口<ul><li><code>live2d_settings[&#39;modelAPI&#39;]</code> 看板娘 API 地址，默认值 <code>&#39;//live2d.fghrsh.net/api/&#39;</code></li><li><code>live2d_settings[&#39;tipsMessage&#39;]</code> 提示语读取路径，默认值 <code>&#39;waifu-tips.json&#39;</code> (一般在 <code>initModel</code> 时指定)</li><li><code>live2d_settings[&#39;hitokotoAPI&#39;]</code> 一言 API 接口，可选 <code>&#39;lwl12.com&#39;</code>，<code>&#39;hitokoto.cn&#39;</code>，<code>&#39;jinrishici.com&#39;</code> (古诗词)</li></ul></li><li>默认模型<ul><li><code>live2d_settings[&#39;modelId&#39;]</code> 默认模型(分组) ID，可在 Demo 页 <code>[F12]</code> 呼出 <code>控制台(Console)</code> 找到</li><li><code>live2d_settings[&#39;modelTexturesId&#39;]</code> 默认材质(模型) ID，可在 Demo 页 <code>[F12]</code> 呼出 <code>控制台(Console)</code> 找到</li></ul></li><li>工具栏设置<ul><li><code>live2d_settings[&#39;showToolMenu&#39;]</code>， 显示工具栏， <code>true</code> | <code>false</code></li><li><code>live2d_settings[&#39;canCloseLive2d&#39;]</code>， 关闭看板娘 按钮，<code>true</code> | <code>false</code></li><li><code>live2d_settings[&#39;canSwitchModel&#39;]</code>， 切换模型 按钮， <code>true</code> | <code>false</code></li><li><code>live2d_settings[&#39;canSwitchTextures&#39;]</code>， 切换材质 按钮， <code>true</code> | <code>false</code></li><li><code>live2d_settings[&#39;canSwitchHitokoto&#39;]</code>， 切换一言 按钮， <code>true</code> | <code>false</code></li><li><code>live2d_settings[&#39;canTakeScreenshot&#39;]</code>， 看板娘截图 按钮，<code>true</code> | <code>false</code></li><li><code>live2d_settings[&#39;canTurnToHomePage&#39;]</code>， 返回首页 按钮， <code>true</code> | <code>false</code></li><li><code>live2d_settings[&#39;canTurnToAboutPage&#39;]</code>，跳转关于页 按钮，<code>true</code> | <code>false</code></li></ul></li><li>模型切换模式<ul><li><code>live2d_settings[&#39;modelStorage&#39;]</code>，记录 ID (刷新后恢复)，<code>true</code> | <code>false</code></li><li><code>live2d_settings[&#39;modelRandMode&#39;]</code>，模型切换，可选 <code>&#39;rand&#39;</code> (随机) | <code>&#39;switch&#39;</code> (顺序)</li><li><code>live2d_settings[&#39;modelTexturesRandMode&#39;]</code>，材质切换，可选 <code>&#39;rand&#39;</code> | <code>&#39;switch&#39;</code></li></ul></li><li>提示消息选项<ul><li><code>live2d_settings[&#39;showHitokoto&#39;]</code>，空闲时一言，<code>true</code> | <code>false</code></li><li><code>live2d_settings[&#39;showF12Status&#39;]</code>，控制台显示加载状态，<code>true</code> | <code>false</code></li><li><code>live2d_settings[&#39;showF12Message&#39;]</code>，提示消息输出到控制台，<code>true</code> | <code>false</code></li><li><code>live2d_settings[&#39;showF12OpenMsg&#39;]</code>，控制台被打开触发提醒，<code>true</code> | <code>false</code></li><li><code>live2d_settings[&#39;showCopyMessage&#39;]</code>，内容被复制触发提醒，<code>true</code> | <code>false</code></li><li><code>live2d_settings[&#39;showWelcomeMessage&#39;]</code>，进入面页时显示欢迎语，<code>true</code> | <code>false</code></li></ul></li><li>看板娘样式设置<ul><li><code>live2d_settings[&#39;waifuSize&#39;]</code>，看板娘大小，例如 <code>&#39;280x250&#39;</code>，<code>&#39;600x535&#39;</code></li><li><code>live2d_settings[&#39;waifuTipsSize&#39;]</code>，提示框大小，例如 <code>&#39;250x70&#39;</code>，<code>&#39;570x150&#39;</code></li><li><code>live2d_settings[&#39;waifuFontSize&#39;]</code>，提示框字体，例如 <code>&#39;12px&#39;</code>，<code>&#39;30px&#39;</code></li><li><code>live2d_settings[&#39;waifuToolFont&#39;]</code>，工具栏字体，例如 <code>&#39;14px&#39;</code>，<code>&#39;36px&#39;</code></li><li><code>live2d_settings[&#39;waifuToolLine&#39;]</code>，工具栏行高，例如 <code>&#39;20px&#39;</code>，<code>&#39;36px&#39;</code></li><li><code>live2d_settings[&#39;waifuToolTop&#39;]</code>，工具栏顶部边距，例如 <code>&#39;0px&#39;</code>，<code>&#39;-60px&#39;</code></li><li><code>live2d_settings[&#39;waifuMinWidth&#39;]</code> 面页小于 指定宽度 隐藏看板娘，例如 <code>&#39;disable&#39;</code> (停用)，<code>&#39;768px&#39;</code></li><li><code>live2d_settings[&#39;waifuEdgeSide&#39;]</code> 看板娘贴边方向，例如 <code>&#39;left:0&#39;</code> (靠左 0px)，<code>&#39;right:30&#39;</code> (靠右 30px)</li><li><code>live2d_settings[&#39;waifuDraggable&#39;]</code> 拖拽样式，可选 <code>&#39;disable&#39;</code> (禁用)，<code>&#39;axis-x&#39;</code> (只能水平拖拽)，<code>&#39;unlimited&#39;</code> (自由拖拽)</li><li><code>live2d_settings[&#39;waifuDraggableRevert&#39;]</code>，松开鼠标还原拖拽位置，<code>true</code> | <code>false</code></li></ul></li><li>其他杂项设置<ul><li><code>live2d_settings[&#39;l2dVersion&#39;]</code>，当前版本 (无需修改)</li><li><code>live2d_settings[&#39;l2dVerDate&#39;]</code>，更新日期 (无需修改)</li><li><code>live2d_settings[&#39;homePageUrl&#39;]</code>，首页地址，可选 <code>&#39;auto&#39;</code> (自动)，<code>&#39;{URL 网址}&#39;</code></li><li><code>live2d_settings[&#39;aboutPageUrl&#39;]</code>，关于页地址，<code>&#39;{URL 网址}&#39;</code></li><li><code>live2d_settings[&#39;screenshotCaptureName&#39;]</code>，看板娘截图文件名，例如 <code>&#39;live2d.png&#39;</code></li></ul></li></ul><h3 id="定制提示语"><a href="#定制提示语" class="headerlink" title="定制提示语"></a>定制提示语</h3><p><em>Tips： <code>waifu-tips.json</code> 已自带默认提示语，如无特殊要求可跳过</em></p><ul><li><code>&quot;waifu&quot;</code> 系统提示<ul><li><code>&quot;console_open_msg&quot;</code> 控制台被打开提醒（支持多句随机）</li><li><code>&quot;copy_message&quot;</code> 内容被复制触发提醒（支持多句随机）</li><li><code>&quot;screenshot_message&quot;</code> 看板娘截图提示语（支持多句随机）</li><li><code>&quot;hidden_message&quot;</code> 看板娘隐藏提示语（支持多句随机）</li><li><code>&quot;load_rand_textures&quot;</code> 随机材质提示语（暂不支持多句）</li><li><code>&quot;hour_tips&quot;</code> 时间段欢迎语（支持多句随机）</li><li><code>&quot;referrer_message&quot;</code> 请求来源欢迎语（不支持多句）</li><li><code>&quot;referrer_hostname&quot;</code> 请求来源自定义名称（根据 host，支持多句随机）</li><li><code>&quot;model_message&quot;</code> 模型切换欢迎语（根据模型 ID，支持多句随机）</li><li><code>&quot;hitokoto_api_message&quot;</code>，一言 API 输出模板（不支持多句随机）</li></ul></li><li><code>&quot;mouseover&quot;</code> 鼠标触发提示（根据 CSS 选择器，支持多句随机）</li><li><code>&quot;click&quot;</code> 鼠标点击触发提示（根据 CSS 选择器，支持多句随机）</li><li><code>&quot;seasons&quot;</code> 节日提示（日期段，支持多句随机）</li></ul><h2 id="使用浏览器插件在任何网页上都显示"><a href="#使用浏览器插件在任何网页上都显示" class="headerlink" title="使用浏览器插件在任何网页上都显示"></a>使用浏览器插件在任何网页上都显示</h2><h3 id="1-安装插件：-https-www-tampermonkey-net"><a href="#1-安装插件：-https-www-tampermonkey-net" class="headerlink" title="1.安装插件： https://www.tampermonkey.net/"></a>1.安装插件： <a href="https://www.tampermonkey.net/" target="_blank" rel="noopener">https://www.tampermonkey.net/</a></h3><h3 id="2-安装脚本：-live2D看板娘"><a href="#2-安装脚本：-live2D看板娘" class="headerlink" title="2.安装脚本： live2D看板娘"></a>2.安装脚本： <a href="https://greasyfork.org/zh-CN/scripts/388065-live2d%E7%9C%8B%E6%9D%BF%E5%A8%98" target="_blank" rel="noopener">live2D看板娘</a></h3><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><ul><li>GitHub源码： <a href="https://github.com/fghrsh/live2d_demo" target="_blank" rel="noopener">https://github.com/fghrsh/live2d_demo</a></li><li>参考文档：<ul><li><a href="https://github.com/fghrsh/live2d_demo/blob/master/README.md" target="_blank" rel="noopener">Live2D demo</a><strong><a href="https://github.com/fghrsh/live2d_demo/blob/master/README.md" target="_blank" rel="noopener">README.md</a></strong></li><li><a href="https://www.fghrsh.net/post/123.html" target="_blank" rel="noopener">网页添加 Live2D 看板娘</a></li><li><a href="https://imjad.cn/archives/lab/add-dynamic-poster-girl-with-live2d-to-your-blog-02" target="_blank" rel="noopener">给博客添加能动的看板娘(Live2D)-将其添加到网页上吧</a></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Tampermonkey脚本 </category>
          
          <category> 网页制作 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> live2d </tag>
            
            <tag> 看板娘 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IP签名档制作</title>
      <link href="/ck67sglvw0003porx7pi03ykc/"/>
      <url>/ck67sglvw0003porx7pi03ykc/</url>
      
        <content type="html"><![CDATA[<p><strong>本篇文章教大家如何生成像下图一样的IP签名档。</strong></p><p><img src="https://ip.hclonely.com" alt="签名档"></p><h3 id="1-下载源码"><a href="#1-下载源码" class="headerlink" title="1.下载源码"></a>1.下载源码</h3><ul><li><a href="https://github.com/xhboke/IP" target="_blank" rel="noopener">GitHub官方下载</a></li><li><a href="https://hclonely-cdn.oss-cn-hongkong.aliyuncs.com/IP-master.zip" target="_blank" rel="noopener">备用下载</a></li></ul><h3 id="2-将下载的源码解压到你的网站目录里（建议新建一个目录，不要放在根目录）"><a href="#2-将下载的源码解压到你的网站目录里（建议新建一个目录，不要放在根目录）" class="headerlink" title="2.将下载的源码解压到你的网站目录里（建议新建一个目录，不要放在根目录）"></a>2.将下载的源码解压到你的网站目录里（建议新建一个目录，不要放在根目录）</h3><h3 id="3-访问http-域名-目录-就可以了"><a href="#3-访问http-域名-目录-就可以了" class="headerlink" title="3.访问http://域名/目录/就可以了"></a>3.访问<code>http://域名/目录/</code>就可以了</h3><ul><li>可以用以下代码插入到网页<br><code>&lt;img src=&quot;http://域名/目录/&quot; /&gt;</code></li><li>也可以用以下短代码插入到论坛<br><code>[img]http://域名/目录/[/img]</code></li></ul><h3 id="4-如果想在图片上添加一句个性签名，请使用-http-域名-目录-s-个性签名Base64编码，例如：https-www-hclonely-com-ip-s-SGVsbG8gV29ybGQh"><a href="#4-如果想在图片上添加一句个性签名，请使用-http-域名-目录-s-个性签名Base64编码，例如：https-www-hclonely-com-ip-s-SGVsbG8gV29ybGQh" class="headerlink" title="4.如果想在图片上添加一句个性签名，请使用 http://域名/目录/?s=个性签名Base64编码，例如：https://www.hclonely.com/ip/?s=SGVsbG8gV29ybGQh"></a>4.如果想在图片上添加一句个性签名，请使用 <code>http://域名/目录/?s=个性签名Base64编码</code>，例如：<code>https://www.hclonely.com/ip/?s=SGVsbG8gV29ybGQh</code></h3><p><img src="https://ip.hclonely.com/?s=SGVsbG8gV29ybGQh" alt="个性签名示例"></p><h3 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h3><ul><li>作者博客： <a href="https://xhboke.com//index.php" target="_blank" rel="noopener">https://xhboke.com//index.php</a></li><li>GitHub源码： <a href="https://github.com/xhboke/IP" target="_blank" rel="noopener">https://github.com/xhboke/IP</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 网页制作 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ip </tag>
            
            <tag> 图片签名档 </tag>
            
            <tag> 签名档 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>给网页添加社会主义核心价值观鼠标点击特效</title>
      <link href="/ck67sgly5002vporx3em71ceg/"/>
      <url>/ck67sgly5002vporx3em71ceg/</url>
      
        <content type="html"><![CDATA[<p><strong>本篇文章教大家如何给自己的网页添加一个像本页面一样鼠标点击显示富强,民主, 文明, 和谐,自由, 平等, 公正,法治, 爱国, 敬业,诚信, 友善的特效。</strong></p><h2 id="原生JS实现代码"><a href="#原生JS实现代码" class="headerlink" title="原生JS实现代码"></a>原生JS实现代码</h2><pre><code class="javascript">window.onload=()=&gt;{    let i=0;//定义获取词语下标    let body=document.getElementsByTagName(&quot;body&quot;)[0];    body.onclick=function(e){//点击body时触发事件        const a=[&quot;富强&quot;,&quot;民主&quot;, &quot;文明&quot;, &quot;和谐&quot;,&quot;自由&quot;, &quot;平等&quot;, &quot;公正&quot;,&quot;法治&quot;, &quot;爱国&quot;, &quot;敬业&quot;,&quot;诚信&quot;, &quot;友善&quot;];//需要显示的词语        let span=document.createElement(&quot;span&quot;);//创建span标签        span.innerText=a[(i++)%a.length];//设置词语给span标签        let x = e.pageX;//获取x指针坐标        let y = e.pageY;//获取y指针坐标        span.style.cssText=&quot;z-index:999999999999999999999999;top:&quot;+(y - 20)+&quot;px;left:&quot;+x+&quot;px;position:absolute;font-weight:bold;color:#ff6651;&quot;;//在鼠标的指针的位置给span标签添加css样式        body.appendChild(span);//在body添加这个span标签        animate(span, {&quot;top&quot; : y - 180,&quot;opacity&quot; : 0}, 15, 0.01, function(){            body.removeChild(span);//时间到了自动删除        })    }    //animate函数执行 CSS 属性集的自定义动画。    function animate(obj, json, interval, sp, fn) {        clearInterval(obj.timer);        function getStyle(obj, arr) {            if(obj.currentStyle){                return obj.currentStyle[arr];//针对ie            } else {                return document.defaultView.getComputedStyle(obj, null)[arr].replace(/px/g,&quot;&quot;);             }        }        obj.timer = setInterval(function(){            var flag = true;            for(var arr in json) {                var icur = 0;                if(arr == &quot;opacity&quot;) {                    icur = Math.round(parseFloat(getStyle(obj, arr))*100);                } else {                    icur = parseInt(getStyle(obj, arr));                }                var speed = (json[arr] - icur) * sp;                speed = speed &gt; 0 ? Math.ceil(speed): Math.floor(speed);                if(icur != json[arr]){                    flag = false;                }                if(arr == &quot;opacity&quot;){                    obj.style.filter = &quot;alpha(opacity : &#39;+(icur + speed)+&#39; )&quot;;                    obj.style.opacity = (icur + speed)/100;                }else {                    obj.style[arr] = icur + speed + &quot;px&quot;;                }            }            if(flag){                clearInterval(obj.timer);                if(fn){                    fn();                }            }        },interval);    }}</code></pre><h2 id="jQuery实现代码"><a href="#jQuery实现代码" class="headerlink" title="jQuery实现代码"></a>jQuery实现代码</h2><pre><code class="javascript">jQuery(document).ready(function($) {    let i=0;//定义获取词语下标    $(&quot;body&quot;).click(function(e) {//点击body时触发事件        let a = [&quot;富强&quot;,&quot;民主&quot;, &quot;文明&quot;, &quot;和谐&quot;,&quot;自由&quot;, &quot;平等&quot;, &quot;公正&quot;,&quot;法治&quot;, &quot;爱国&quot;, &quot;敬业&quot;,&quot;诚信&quot;, &quot;友善&quot;];//需要显示的词语        let $i = $(&quot;&lt;span/&gt;&quot;).text(a[(i++)%a.length]);//设置词语给span标签        let x = e.pageX;        let y = e.pageY;//获取x和y的指针坐标        $i.css({&quot;z-index&quot; : 9999999999999999999,                &quot;top&quot; : y - 20,                &quot;left&quot; : x,                &quot;position&quot; : &quot;absolute&quot;,                &quot;font-weight&quot; : &quot;bold&quot;,                &quot;color&quot; : &quot;#ff6651&quot;               });//在鼠标的指针的位置给$i定义的span标签添加css样式        $(&quot;body&quot;).append($i);//在body添加这个标签        /*nimate() 方法执行 CSS 属性集的自定义动画。          *该方法通过CSS样式将元素从一个状态改变为另一个状态。CSS属性值是逐渐改变的，这样就可以创建动画效果。         *详情请看http://www.w3school.com.cn/jquery/effect_animate.asp         */        $i.animate({            &quot;top&quot; : y - 180,//将原来的位置向上移动180            &quot;opacity&quot; : 0            //1500动画的速度        }, 1500, ()=&gt;{            $i.remove();//时间到了自动删除        });    });});</code></pre><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><ul><li>参考文档：<ul><li><a href="https://blog.techauch.com/get/detail/54116" target="_blank" rel="noopener">HTML+CSS+JS实现鼠标点击特效富强\民主\文明方法 </a></li><li><a href="https://www.jb51.net/article/90929.htm" target="_blank" rel="noopener">原生js实现jquery函数animate()动画效果的简单实例</a></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 网页制作 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 鼠标特效 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>为网页添加一个社交分享插件</title>
      <link href="/ck67sglwh000oporx5manfy74/"/>
      <url>/ck67sglwh000oporx5manfy74/</url>
      
        <content type="html"><![CDATA[<p><strong>本篇文章教大家如何给自己的网页添加一个如页面底部和左下的社交分享插件。</strong></p><h2 id="使用说明"><a href="#使用说明" class="headerlink" title="使用说明"></a>使用说明</h2><h3 id="1-注册一个帐号或登录（已注册）"><a href="#1-注册一个帐号或登录（已注册）" class="headerlink" title="1.注册一个帐号或登录（已注册）"></a>1.<a href="https://www.addthis.com/register?next=/dashboard#tool-config" target="_blank" rel="noopener">注册</a>一个帐号或<a href="https://www.addthis.com/login?next=/dashboard" target="_blank" rel="noopener">登录</a>（已注册）</h3><h3 id="2-登录成功后点击上方导航栏中的Get-The-Code"><a href="#2-登录成功后点击上方导航栏中的Get-The-Code" class="headerlink" title="2.登录成功后点击上方导航栏中的Get The Code"></a>2.登录成功后点击上方导航栏中的Get The Code</h3><h3 id="3-找到如下代码复制到你的网页"><a href="#3-找到如下代码复制到你的网页" class="headerlink" title="3.找到如下代码复制到你的网页"></a>3.找到如下代码复制到你的网页</h3><pre><code class="html">&lt;!-- Go to www.addthis.com/dashboard to customize your tools --&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;//s7.addthis.com/js/300/addthis_widget.js#pubid=***************&quot;&gt;&lt;/script&gt;</code></pre><h3 id="4-点击上方导航栏中的Tools"><a href="#4-点击上方导航栏中的Tools" class="headerlink" title="4.点击上方导航栏中的Tools"></a>4.点击上方导航栏中的Tools</h3><h3 id="5-点击右面的ADD-NEW-TOOL按钮"><a href="#5-点击右面的ADD-NEW-TOOL按钮" class="headerlink" title="5.点击右面的ADD NEW TOOL按钮"></a>5.点击右面的ADD NEW TOOL按钮</h3><h3 id="6-选择一个你想添加的工具，这里以关注按钮（Follow-Buttons）为例"><a href="#6-选择一个你想添加的工具，这里以关注按钮（Follow-Buttons）为例" class="headerlink" title="6.选择一个你想添加的工具，这里以关注按钮（Follow Buttons）为例  "></a>6.选择一个你想添加的工具，这里以关注按钮（Follow Buttons）为例  <img src="https://img.hclonely.com/blog/2019/10/cR3sYg.png@!full" alt="Follow Buttons"></h3><h3 id="7-在左边选择按钮显示位置，这里以内联（Inline）为例，可以在右边查看效果"><a href="#7-在左边选择按钮显示位置，这里以内联（Inline）为例，可以在右边查看效果" class="headerlink" title="7.在左边选择按钮显示位置，这里以内联（Inline）为例，可以在右边查看效果 "></a>7.在左边选择按钮显示位置，这里以内联（Inline）为例，可以在右边查看效果 <img src="https://img.hclonely.com/blog/2019/10/rRI7vU.png@!full" alt="Inline"></h3><h3 id="8-选择要添加哪些关注按钮，长按可以调整顺序"><a href="#8-选择要添加哪些关注按钮，长按可以调整顺序" class="headerlink" title="8.选择要添加哪些关注按钮，长按可以调整顺序 "></a>8.选择要添加哪些关注按钮，长按可以调整顺序 <img src="https://img.hclonely.com/blog/2019/10/LUdIAT.png@!full" alt="Select Button"></h3><h3 id="9-其他几个选项可以设置按钮样式、位置等，大家可以自行探索，最后点击Update-Tool或Activate-Tool就可以了"><a href="#9-其他几个选项可以设置按钮样式、位置等，大家可以自行探索，最后点击Update-Tool或Activate-Tool就可以了" class="headerlink" title="9.其他几个选项可以设置按钮样式、位置等，大家可以自行探索，最后点击Update Tool或Activate Tool就可以了"></a>9.其他几个选项可以设置按钮样式、位置等，大家可以自行探索，最后点击Update Tool或Activate Tool就可以了</h3><p><strong>注意：使用“ 内联 ”时将页面拉到下面可以看到如下内容：</strong> <img src="https://img.hclonely.com/blog/2019/10/Ts9ic7.png@!full" alt="Inline Tool"></p><p><strong>不要忘了将内联代码复制到要显示的位置。</strong></p><h3 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h3><ul><li>插件官网： <a href="https://www.addthis.com/" target="_blank" rel="noopener">https://www.addthis.com</a></li></ul><div class="addthis_inline_follow_toolbox"></div><script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-5d493e6a5c0d421f"></script>]]></content>
      
      
      <categories>
          
          <category> 网页制作 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> addThis </tag>
            
            <tag> 分享 </tag>
            
            <tag> 社交 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>为网页添加字体闪烁（变色）特效</title>
      <link href="/ck67sglwj000sporx3ltf8o7o/"/>
      <url>/ck67sglwj000sporx3ltf8o7o/</url>
      
        <content type="html"><![CDATA[<p style="color:#0693e3;font-weight:700">本篇文章教大家如何给自己的网页添加一个字体<font class="magic-color">闪烁（变色）</font>特效。  </p><script>function magicColor(mode,t){    t=t||10;    let elem=document.getElementsByClassName("magic-color");    if(!elem){        setTimeout(function(){            magicColor(mode,t-1);        },400);        return;    }    if(window.mcHandler==undefined){        window.mcHandler={elements:[]};        window.mcHandler.colorIndex=0;        window.mcHandler.run=function(mode){            let color=mode=="random"?("rgb("+Math.floor(Math.random()*256)+","+Math.floor(Math.random()*256)+","+Math.floor(Math.random()*256)+",1)"):["#CC0000","#9999CC","#CC3366","#669999","#FFCC00","#00CCCC","#CC00CC"][(window.mcHandler.colorIndex++)%7];            for(var i=0,L=window.mcHandler.elements.length;i<L;i++)window.mcHandler.elements[i].style.color=color;        }    }    window.mcHandler.elements=elem;    if(window.mcHandler.timer==undefined){        window.mcHandler.timer=setInterval(()=>{window.mcHandler.run(mode)},500);    }}magicColor("");</script><h2 id="添加步骤"><a href="#添加步骤" class="headerlink" title="添加步骤"></a>添加步骤</h2><h3 id="1-给要添加特效的元素添加class-magic-color"><a href="#1-给要添加特效的元素添加class-magic-color" class="headerlink" title="1.给要添加特效的元素添加class: magic-color"></a>1.给要添加特效的元素添加class: <code>magic-color</code></h3><h3 id="2-将以下代码复制到元素后面（多个元素则放到最后一个元素后面）"><a href="#2-将以下代码复制到元素后面（多个元素则放到最后一个元素后面）" class="headerlink" title="2.将以下代码复制到元素后面（多个元素则放到最后一个元素后面）"></a>2.将以下代码复制到元素后面（多个元素则放到最后一个元素后面）</h3><pre><code class="html">&lt;script&gt;function magicColor(mode,t){    t=t||10;    let elem=document.getElementsByClassName(&quot;magic-color&quot;);    if(!elem){        setTimeout(function(){            magicColor(mode,t-1);        },400);        return;    }    if(window.mcHandler==undefined){        window.mcHandler={elements:[]};        window.mcHandler.colorIndex=0;        window.mcHandler.run=function(mode){            let color=mode==&quot;random&quot;?(&quot;rgb(&quot;+Math.floor(Math.random()*256)+&quot;,&quot;+Math.floor(Math.random()*256)+&quot;,&quot;+Math.floor(Math.random()*256)+&quot;,1)&quot;):[&quot;#CC0000&quot;,&quot;#9999CC&quot;,&quot;#CC3366&quot;,&quot;#669999&quot;,&quot;#FFCC00&quot;,&quot;#00CCCC&quot;,&quot;#CC00CC&quot;][(window.mcHandler.colorIndex++)%7];            for(var i=0,L=window.mcHandler.elements.length;i&lt;L;i++)window.mcHandler.elements[i].style.color=color;        }    }    window.mcHandler.elements=elem;    if(window.mcHandler.timer==undefined){        window.mcHandler.timer=setInterval(()=&gt;{window.mcHandler.run(mode)},500);    }}magicColor(random);//random为随机颜色，否则为固定颜色随机；上方“闪烁（变色）”字样为固定颜色随机&lt;/script&gt;</code></pre>]]></content>
      
      
      <categories>
          
          <category> 网页制作 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网页特效 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>为网页添加一个一言插件</title>
      <link href="/ck67sglwd000hporxays7f0wh/"/>
      <url>/ck67sglwd000hporxays7f0wh/</url>
      
        <content type="html"><![CDATA[<p><strong>本篇文章教大家如何给自己的网页添加一个一言插件。</strong></p><h2 id="什么是一言？"><a href="#什么是一言？" class="headerlink" title="什么是一言？"></a>什么是一言？</h2><p>简单来说，一言指的就是一句话，可以是动漫中的台词，也可以是网络上的各种小段子。</p><link href="https://cdn.bootcss.com/twitter-bootstrap/4.3.1/css/bootstrap.min.css" rel="stylesheet"><div>例如：<p id="hitokoto" style="background-color:rgb(238, 238, 238);font-size:13px">:D 获取中...</p></div><script src="https://v1.hitokoto.cn/?encode=js&amp;select=%23hitokoto" defer=""></script><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p><strong>将下方代码插入到你想让一言显示的位置即可</strong></p><pre><code class="html">    &lt;p id=&quot;hitokoto&quot;&gt;:D 获取中...&lt;/p&gt;    &lt;!-- 以下写法，选取一种即可 --&gt;    &lt;!-- 现代写法，推荐 --&gt;    &lt;!-- 兼容低版本浏览器 (包括 IE)，可移除 --&gt;    &lt;script src=https://cdn.jsdelivr.net/npm/bluebird@3/js/browser/bluebird.min.js&gt;&lt;/script&gt;    &lt;script src=https://cdn.jsdelivr.net/npm/whatwg-fetch@2.0.3/fetch.min.js&gt;&lt;/script&gt;    &lt;!--End--&gt;    &lt;script&gt;      fetch(&#39;https://v1.hitokoto.cn&#39;)        .then(function (res){          return res.json();        })        .then(function (data) {          var hitokoto = document.getElementById(&#39;hitokoto&#39;);          hitokoto.innerText = data.hitokoto;         })        .catch(function (err) {          console.error(err);        })    &lt;/script&gt;    &lt;!-- 老式写法，兼容性最忧 --&gt;    &lt;script&gt;      var xhr = new XMLHttpRequest();      xhr.open(&#39;get&#39;, &#39;https://v1.hitokoto.cn&#39;);      xhr.onreadystatechange = function () {        if (xhr.readyState === 4) {          var data = JSON.parse(xhr.responseText);          var hitokoto = document.getElementById(&#39;hitokoto&#39;);          hitokoto.innerText = data.hitokoto;        }      }      xhr.send();    &lt;/script&gt;    &lt;!-- 新 API 方法， 十分简洁 --&gt;    &lt;script src=&quot;https://v1.hitokoto.cn/?encode=js&amp;select=%23hitokoto&quot; defer=&quot;&quot;&gt;&lt;/script&gt;</code></pre><h2 id="其他参数设置"><a href="#其他参数设置" class="headerlink" title="其他参数设置"></a>其他参数设置</h2><h3 id="请求地址"><a href="#请求地址" class="headerlink" title="请求地址"></a>请求地址</h3><table class="apitable" border="0" cellspacing="0" cellpadding="0">  <tbody>    <tr>      <th><b>请求地址</b></th>      <th><b>请求方式</b></th>      <th><b>说明</b></th>    </tr>    <tr>      <td>https://v1.hitokoto.cn/</td>      <td>GET/POST</td>      <td>1、已启用 HSTS， 并已加入 HSTS Preload List 计划<br>2、站点QPS限制：10，超过有可能会被屏蔽<br>3、线路：大陆+海外</td>    </tr>    <tr>      <td>https://international.v1.hitokoto.cn/</td>      <td>GET/POST</td>      <td>1、已启用 HSTS， 并已加入 HSTS Preload List 计划<br>2、站点QPS限制：25，超过有可能会被屏蔽<br>3、线路：海外</td>    </tr>  </tbody></table><h3 id="请求方式"><a href="#请求方式" class="headerlink" title="请求方式"></a>请求方式</h3><table class="apitable" border="0" cellspacing="0" cellpadding="0">  <tbody>    <tr>      <th width="100"><b>参数名称</b></th>      <th width="100"><b>类型</b></th>      <th colspan="4"><b>描述</b></th>    </tr>    <tr style="text-align: center;">      <td rowspan="9">c</td>      <td rowspan="9">可选</td>      <td colspan="4">Cat，即类型。提交不同的参数代表不同的类别，具体：</td>    </tr>    <tr>      <td>a</td>      <td colspan="3">Anime - 动画</td>    </tr>    <tr>      <td>b</td>      <td colspan="3">Comic – 漫画</td>    </tr>    <tr>      <td>c</td>      <td colspan="3">Game – 游戏</td>    </tr>    <tr>      <td>d</td>      <td colspan="3">Novel – 小说</td>    </tr>    <tr>      <td>e</td>      <td colspan="3">Myself – 原创</td>    </tr>    <tr>      <td>f</td>      <td colspan="3">Internet – 来自网络</td>    </tr>    <tr>      <td>g</td>      <td colspan="3">Other – 其他</td>    </tr>    <tr>      <td>其他不存在参数</td>      <td colspan="3">任意类型随机取得</td>    </tr>    <tr>      <td rowspan="5" style="text-align: center;">encode</td>      <td rowspan="5" style="text-align: center;">可选</td>    </tr>    <tr>      <td>text</td>      <td colspan="3">返回纯净文本</td>   </tr>    <tr>      <td>json</td>      <td colspan="3">返回不进行unicode转码的json文本</td>    </tr>    <tr>      <td>js</td>      <td colspan="3">返回指定选择器(默认.hitokoto)的同步执行函数。</td>    </tr>    <tr>      <td>其他不存在参数</td>      <td colspan="3">返回unicode转码的json文本</td>    </tr>    <tr>      <td rowspan="3" style="text-align: center;">charset</td>      <td rowspan="3" style="text-align: center;">可选</td>    </tr>    <tr>      <td>utf-8</td>      <td colspan="3">返回 UTF-8 编码的内容，支持与异步函数同用。</td>    </tr>    <tr>      <td>gbk</td>      <td colspan="3">返回 GBK 编码的内容，不支持与异步函数同用。</td>    </tr>    <tr>      <td rowspan="3" style="text-align: center;">callback</td>      <td rowspan="3" style="text-align: center;">可选</td>    </tr>    <tr>      <td>回调函数</td>      <td colspan="3">将返回的内容传参给指定的异步函数。</td>    </tr>  </tbody></table><h3 id="返回数据（默认json格式）"><a href="#返回数据（默认json格式）" class="headerlink" title="返回数据（默认json格式）"></a>返回数据（默认json格式）</h3><table class="apitable" border="0" cellspacing="0" cellpadding="0">  <tbody>    <tr>      <th><b>返回参数名称</b></th>      <th><b>描述</b></th>    </tr>    <tr>      <td>id</td>      <td>本条一言的id。<br>可以链接到https://hitokoto.cn?id=[id]查看这个一言的完整信息。</td>    </tr>    <tr>      <td>hitokoto</td>      <td>一言正文。编码方式unicode。使用utf-8。</td>    </tr>    <tr>      <td>type</td>      <td>类型。请参考第三节参数的表格。</td>    </tr>    <tr>      <td>from</td>      <td>一言的出处。</td>    </tr>    <tr>      <td>creator</td>      <td>添加者。</td>    </tr>    <tr>      <td>created_at</td>      <td>添加时间。</td>    </tr>    <tr>      <td colspan="2">注意：如果encode参数为text，那么输出的只有一言正文。</td>    </tr>  </tbody></table><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><ul><li>插件官网：<a href="https://hitokoto.cn/" target="_blank" rel="noopener">https://hitokoto.cn/</a></li><li>参考说明文档：<a href="https://hitokoto.cn/api" target="_blank" rel="noopener">一言 API 使用说明</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 网页制作 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 一言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>为网页添加一个天气插件</title>
      <link href="/ck67sglwg000lporx10krhvvi/"/>
      <url>/ck67sglwg000lporx10krhvvi/</url>
      
        <content type="html"><![CDATA[<p><strong>本篇文章教大家如何给自己的网页添加一个类似右上角的天气预报插件。</strong></p><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-注册中国天气网帐号或登录（已有帐号）"><a href="#1-注册中国天气网帐号或登录（已有帐号）" class="headerlink" title="1.注册中国天气网帐号或登录（已有帐号）"></a>1.<a href="http://u2.weather.com.cn/web/sso/regist-ui.do" target="_blank" rel="noopener">注册中国天气网帐号</a>或<a href="http://u2.weather.com.cn/web/sso/login-ui.do" target="_blank" rel="noopener">登录</a>（已有帐号）</h3><h3 id="2-登陆后打开天气插件网页：-https-cj-weather-com-cn-plugin-pc"><a href="#2-登陆后打开天气插件网页：-https-cj-weather-com-cn-plugin-pc" class="headerlink" title="2.登陆后打开天气插件网页： https://cj.weather.com.cn/plugin/pc"></a>2.登陆后打开天气插件网页： <a href="https://cj.weather.com.cn/plugin/pc" target="_blank" rel="noopener">https://cj.weather.com.cn/plugin/pc</a></h3><h3 id="3-自定义插件样式，如下图"><a href="#3-自定义插件样式，如下图" class="headerlink" title="3.自定义插件样式，如下图"></a>3.自定义插件样式，如下图</h3><link href="https://cdn.bootcss.com/twitter-bootstrap/4.3.1/css/bootstrap.min.css" rel="stylesheet"><link href="https://cj.weather.com.cn/portal/css/main.css?v=20190101" rel="stylesheet"><div class="col-xs-5 content">    <div class="plugin-type">        <div class="plugin-type-title">            <div class="line-vertical"></div> <span>外观</span>        </div>        <table class="table plugin-type-item">            <tbody>                <tr>                    <td width="15%" class="item-title">样式</td>                    <td data-area="1" data-type="style" data-type-name="样式">                        <div> <span class="active" data-value="1">悬浮窗</span>                            <span data-value="2">小视图</span>                        </div>                    </td>                </tr>                <tr>                    <td class="item-title">位置</td>                    <td data-area="2" data-type="position" data-type-name="位置">                        <div> <span class="active" data-value="1">左上角</span>                            <span data-value="2">右上角</span>                            <span data-value="3">左下角</span>                            <span data-value="4">右下角</span>                        </div>                        <div style="margin: 10px 0 0"> <span data-value="5">自定义位置</span>                        </div>                        <div style="margin: 15px 0 0"> <span class="normal-text" style="padding: 2px 0;cursor: default">距顶部</span>                            <input type="text" id="top" name="top" maxlength="4"> <span class="normal-text" style="padding: 2px 0;cursor: default">距左边</span>                            <input type="text" id="width" name="width" maxlength="4">                        </div>                    </td>                </tr>                <tr>                    <td class="item-title">背景</td>                    <td data-area="3" data-type="background" data-type-name="背景"> <span class="active" data-value="1">随天气变化</span>                        <span data-value="2">深色</span>                        <span data-value="3">浅色</span>                    </td>                </tr>            </tbody>        </table>    </div>    <div class="plugin-type">        <div class="plugin-type-title">            <div class="line-vertical"></div> <span>设置</span>        </div>        <table class="table plugin-type-item">            <tbody>                <tr>                    <td width="15%" class="item-title">语言</td>                    <td data-area="4" data-type="language" data-type-name="语言">                        <div> <span class="active" data-value="1">浏览器语言</span>                            <span data-value="zh">简体中文</span>                            <span data-value="hk">繁体中文</span>                        </div>                        <div style="margin: 10px 0 0"> <span data-value="en">英文</span>                        </div>                    </td>                </tr>                <tr>                    <td width="15%" class="item-title">单位</td>                    <td data-area="5" data-type="unit" data-type-name="单位"> <span class="active" data-value="1">摄氏度</span>                        <span data-value="2">华氏度</span>                    </td>                </tr>                <tr>                    <td width="15%" class="item-title">城市</td>                    <td data-area="6" data-type="city" data-type-name="城市"> <span class="active" data-value="1">定位城市</span>                        <span data-value="2">切换城市</span>                    </td>                </tr>            </tbody>        </table>    </div>    <div class="plugin-content">        <div class="plugin-content-title">            <div class="line-vertical"></div> <span>天气内容</span>        </div>        <div class="plugin-content-item-title">天气实况</div>        <table class="table plugin-type-item">            <tbody>                <tr>                    <td width="50%" class="item-title">实况天气状态图标</td>                    <td class="text-right">                        <input type="checkbox" id="nowIcon" name="nowIcon" checked="checked">                    </td>                </tr>                <tr>                    <td width="50%" class="item-title">实时温度</td>                    <td class="text-right">                        <input type="checkbox" id="nowTmp" name="nowTmp" checked="checked">                    </td>                </tr>            </tbody>        </table>        <div class="plugin-content-item-title">空气质量</div>        <table class="table plugin-type-item">            <tbody>                <tr>                    <td width="50%" class="item-title">实时空气质量指数</td>                    <td class="text-right">                        <input type="checkbox" id="aqi" name="aqi" checked="checked">                    </td>                </tr>            </tbody>        </table>        <div class="plugin-content-item-title">灾害预警</div>        <table class="table plugin-type-item">            <tbody>                <tr>                    <td width="50%" class="item-title">灾害预警</td>                    <td class="text-right">                        <input type="checkbox" id="alarm" name="alarm" checked="checked">                    </td>                </tr>            </tbody>        </table>    </div>    <div class="view-generator">        <div class="plugin-generator-title">生成插件</div>        <div class="plugin-generator-form">            <label for="name">设置名称</label>            <input id="name" name="name" type="text" maxlength="20">        </div>        <div class="plugin-generator-button">            <button type="button" class="btn" onclick="javascript:void(0);">生成代码</button>            <button type="button" class="btn" onclick="javascript:void(0);">重置</button>        </div>    </div></div><h3 id="4-自定义样式完成后输入自定义插件名称，点击生成代码，会看到类似下方代码"><a href="#4-自定义样式完成后输入自定义插件名称，点击生成代码，会看到类似下方代码" class="headerlink" title="4.自定义样式完成后输入自定义插件名称，点击生成代码，会看到类似下方代码"></a>4.自定义样式完成后输入自定义插件名称，点击生成代码，会看到类似下方代码</h3><pre><code class="html">&lt;!-- test --&gt;&lt;script type=&quot;text/javascript&quot;&gt;WIDGET = {FID: &#39;**********&#39;}&lt;/script&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;https://apip.weatherdt.com/float/static/js/r.js?v=1111&quot;&gt;&lt;/script&gt;</code></pre><h3 id="5-将生成的代码复制到html文件里即可"><a href="#5-将生成的代码复制到html文件里即可" class="headerlink" title="5.将生成的代码复制到html文件里即可"></a>5.将生成的代码复制到html文件里即可</h3><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><ul><li>插件官网： <a href="https://cj.weather.com.cn/" target="_blank" rel="noopener">https://cj.weather.com.cn/</a></li></ul><style>#weather-float-he{z-index:999999;position: fixed !important;top: 58px !important;}</style><script type="text/javascript">    WIDGET = {FID: 'JJmkkElHWp'}</script><script type="text/javascript" src="https://apip.weatherdt.com/float/static/js/r.js?v=1111"></script>]]></content>
      
      
      <categories>
          
          <category> 网页制作 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 天气 </tag>
            
            <tag> 网页 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>为网页添加一个音乐播放器插件</title>
      <link href="/ck67sglxx002nporx2ko6c8tf/"/>
      <url>/ck67sglxx002nporx2ko6c8tf/</url>
      
        <content type="html"><![CDATA[<p><strong>本篇文章教大家如何给自己的网页添加一个类似左下角的音乐播放器。</strong></p><h2 id="插件名称：APlayer"><a href="#插件名称：APlayer" class="headerlink" title="插件名称：APlayer"></a>插件名称：APlayer</h2><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="在header标签引入css样式文件"><a href="#在header标签引入css样式文件" class="headerlink" title="在header标签引入css样式文件"></a>在header标签引入css样式文件</h3><pre><code class="html">&lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.bootcss.com/aplayer/1.10.1/APlayer.min.css&quot;&gt;</code></pre><h3 id="在body标签内加入div标签并引入js文件"><a href="#在body标签内加入div标签并引入js文件" class="headerlink" title="在body标签内加入div标签并引入js文件"></a>在body标签内加入div标签并引入js文件</h3><pre><code class="html">&lt;script src=&quot;https://cdn.bootcss.com/aplayer/1.10.1/APlayer.min.js&quot;&gt;&lt;/script&gt;</code></pre><h3 id="加载播放器"><a href="#加载播放器" class="headerlink" title="加载播放器"></a>加载播放器</h3><pre><code class="javascript">const ap = new APlayer({    container: document.getElementById(&#39;aplayer&#39;),    fixed: true,//开启吸底模式    autoplay: true,//自动播放    lrcType: 1,//歌词加载方式    audio: audioArr,//歌曲列表});//更多详细参数请前往https://aplayer.js.org/#/zh-Hans/查看</code></pre><h3 id="引入autoPlay-js自动加载网易云音乐（可选，需jQuery支持）"><a href="#引入autoPlay-js自动加载网易云音乐（可选，需jQuery支持）" class="headerlink" title="引入autoPlay.js自动加载网易云音乐（可选，需jQuery支持）"></a>引入autoPlay.js自动加载网易云音乐（可选，需jQuery支持）</h3><pre><code class="javascript">try {    $.ajax({url: &quot;https://cdn.bootcss.com/bluebird/3.5.5/bluebird.min.js&quot;, dataType:&quot;script&quot;, cache: true,   success: function() {        $.ajax({url: &quot;https://cdn.bootcss.com/fetch/2.0.4/fetch.min.js&quot;, dataType:&quot;script&quot;, cache: true, success: function() {            function fetch163Playlist(playlist_id) {                return new Promise(function (ok, err) {                    fetch(&quot;https://v1.hitokoto.cn/nm/playlist/&quot; + playlist_id)                    .then(function (response) {                        return response.json();                    })                    .then(function (data) {                        var arr = [];                        data.playlist.tracks.map(function (value) {                            arr.push(value.id);                        });                        return arr;                    })                    .then(function (ids) {                        return fetch163Songs(ids);                    })                    .then(function (data) {                        ok(data);                    })                    .catch(function (e) {                        err(e);                    });                })            }            function fetch163Songs(IDS) {                return new Promise(function (ok, err) {                    var ids;                    switch (typeof IDS) {                        case &#39;number&#39;:                            ids = [IDS];                            break;                        case &#39;object&#39;:                            if (!Array.isArray(IDS)) {                                err(new Error(&quot;Please enter array or number&quot;));                            }                            ids = IDS;                            break;                        default:                            err(new Error(&quot;Please enter array or number&quot;));                            break;                    }                      fetch(&quot;https://v1.hitokoto.cn/nm/summary/&quot; + ids.join(&quot;,&quot;) + &quot;?lyric=true&amp;common=true&quot;)                        .then(function (response) {                        return response.json();                    })                        .then(function (data) {                        var songs = [];                        data.songs.map(function (song) {                            songs.push({                                name: song.name,                                url: song.url,                                artist: song.artists.join(&quot;/&quot;),                                album: song.album.name,                                pic: song.album.picture,                                lrc: song.lyric                            });                        });                        return songs;                    })                        .then(function (result) {                        ok(result);                    })                        .catch(function (e) {                        err(e);                    });                });            }            /****加载多个网易云音乐单曲****/            fetch163Songs(songArr)//此处&quot;songArr&quot;为网易云音乐id数组                .then(function (data) {                let audioArr=[];                for(let i=0;i&lt;data.length;i++){                    audioArr.push({&#39;name&#39;:data[i].name,&#39;artist&#39;:data[i].artist,&#39;url&#39;:data[i].url,&#39;cover&#39;:data[i].pic,&#39;lrc&#39;:data[i].lrc.base});                }                const ap = new APlayer({                    container: document.getElementById(&#39;aplayer&#39;),                    fixed: true,                    autoplay: true,                    lrcType: 1,                    audio: audioArr,                });            })                .catch(function (err) {                console.error(&#39;网易云音乐获取失败！&#39;+err);            })            /****加载网易云音乐歌单****/            fetch163Playlist(listId)//此处&quot;listId&quot;为网易云音乐歌单id                .then(function (data) {                let audioArr=[];                for(let i=0;i&lt;data.length;i++){                    audioArr.push({&#39;name&#39;:data[i].name,&#39;artist&#39;:data[i].artist,&#39;url&#39;:data[i].url,&#39;cover&#39;:data[i].pic,&#39;lrc&#39;:data[i].lrc.base});                }                const ap = new APlayer({                    container: document.getElementById(&#39;aplayer&#39;),                    fixed: true,                    autoplay: true,                    lrcType: 1,                    audio: audioArr,                });            })                .catch(function (err) {                console.error(&#39;网易云音乐获取失败！&#39;+err);            })        }});    }});} catch(err) { console.log(&quot;[Error]&quot;+err) }</code></pre><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><ul><li>插件官网：<a href="http://aplayer.js.org" target="_blank" rel="noopener">http://aplayer.js.org</a></li><li>插件GitHub：<a href="https://github.com/MoePlayer/APlayer" target="_blank" rel="noopener">https://github.com/MoePlayer/APlayer</a></li><li>中文说明文档： <a href="https://aplayer.js.org/#/zh-Hans/" target="_blank" rel="noopener">https://aplayer.js.org/#/zh-Hans/</a></li><li>CDN支持：<a href="https://www.bootcdn.cn/" target="_blank" rel="noopener">BootCDN</a></li><li>网易云音乐API： <a href="https://github.com/a632079/teng-koa" target="_blank" rel="noopener">https://github.com/a632079/teng-koa</a></li></ul><link rel="stylesheet" href="https://cdn.bootcss.com/aplayer/1.10.1/APlayer.min.css"><script src="https://cdn.bootcss.com/jquery/3.4.1/jquery.min.js"></script><div id="aplayer"></div><script src="https://cdn.bootcss.com/aplayer/1.10.1/APlayer.min.js"></script><script>window.onload=function(){    try {        $.ajax({url: "https://cdn.bootcss.com/bluebird/3.5.5/bluebird.min.js", dataType:"script", cache: true, success: function() {            $.ajax({url: "https://cdn.bootcss.com/fetch/2.0.4/fetch.min.js", dataType:"script", cache: true, success: function() {                function fetch163Playlist(playlist_id) {                    return new Promise(function (ok, err) {                        fetch("https://v1.hitokoto.cn/nm/playlist/" + playlist_id)                            .then(function (response) {                            return response.json();                        })                            .then(function (data) {                            var arr = [];                            data.playlist.tracks.map(function (value) {                                arr.push(value.id);                            });                            return arr;                        })                            .then(function (ids) {                            return fetch163Songs(ids);                        })                            .then(function (data) {                            ok(data);                        })                            .catch(function (e) {                            err(e);                        });                    })                }                function fetch163Songs(IDS) {                    return new Promise(function (ok, err) {                        var ids;                        switch (typeof IDS) {                            case 'number':                                ids = [IDS];                                break;                            case 'object':                                if (!Array.isArray(IDS)) {                                    err(new Error("Please enter array or number"));                                }                                ids = IDS;                                break;                            default:                                err(new Error("Please enter array or number"));                                break;                        }                          fetch("https://v1.hitokoto.cn/nm/summary/" + ids.join(",") + "?lyric=true&common=true")                            .then(function (response) {                            return response.json();                        })                            .then(function (data) {                            var songs = [];                            data.songs.map(function (song) {                                songs.push({                                    name: song.name,                                    url: song.url,                                    artist: song.artists.join("/"),                                    album: song.album.name,                                    pic: song.album.picture,                                    lrc: song.lyric                                });                            });                            return songs;                        })                            .then(function (result) {                            ok(result);                        })                            .catch(function (e) {                            err(e);                        });                    });                }                /****加载网易云音乐歌单****/                fetch163Playlist(2933406334)//此处为网易云音乐歌单id                    .then(function (data) {                    let audioArr=[];                    for(let i=0;i<data.length;i++){                        audioArr.push({'name':data[i].name,'artist':data[i].artist,'url':data[i].url,'cover':data[i].pic,'lrc':data[i].lrc.base});                    }                    const ap = new APlayer({                        container: document.getElementById('aplayer'),                        fixed: true,                        autoplay: false,                        lrcType: 1,                        audio: audioArr,                    });                })                    .catch(function (err) {                    console.error('网易云音乐获取失败！'+err);                })            }});        }});    } catch(err) { console.log("[Error]"+err) }}</script>]]></content>
      
      
      <categories>
          
          <category> 网页制作 </category>
          
          <category> 音乐播放器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> APlayer </tag>
            
            <tag> 音乐播放器 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
